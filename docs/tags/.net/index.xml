<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.net on Dray&#39;s Home</title>
    <link>https://draychou.github.io/Blog-Hugo/tags/.net/</link>
    <description>Recent content in .net on Dray&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://draychou.github.io/Blog-Hugo/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记一次 wsdl 服务的调用</title>
      <link>https://draychou.github.io/Blog-Hugo/docs/php-soap-and-net-soap/</link>
      <pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://draychou.github.io/Blog-Hugo/docs/php-soap-and-net-soap/</guid>
      <description>公司业务要用到某 wsdl 的服务，使用 php5 自带的 soapclient 进行链接，屡次连不上，然后换 nusoap 包进行测试，还是不行，最后找到修改官方包 namespace 的方法才通过，记录下经验吧。
soapclient  官方推荐的调用对方函数的方法 _soapCall 函数调用如果失败，完全不输出任何信息。 这个包无法查看对方返回的 http 状态。 封装好的数据对方无法解析，直接报解析错误，需要继承并修改官方包，代码如下:   class MSSoapClient extends SoapClient { function __doRequest($request, $location, $action, $version) { $namespace = &amp;quot;http://adc.ecinterface/&amp;quot;; $request = preg_replace(&#39;/ $request = preg_replace(&#39;/ $request = str_replace(array(&#39;/ns1:&#39;, &#39;xmlns:ns1=&amp;quot;&#39; . $namespace . &#39;&amp;quot;&#39;), array(&#39;/&#39;, &#39;&#39;), $request); // parent call return parent::__doRequest($request, $location, $action, $version); } }  nusoap  发出去的数据因为不是系统级的封装，所以数据前会带上不少的噪音，对方完全无法识别。  总结  对于不了解的还是要多祭拜谷歌大神。 还是要多试。  参考地址 http://stackoverflow.</description>
    </item>
    
  </channel>
</rss>