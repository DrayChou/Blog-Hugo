<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Dray&#39;s Home</title>
    <link>https://idc.wf/</link>
    <description>Recent content in Home on Dray&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 30 Dec 2015 23:35:29 +0000</lastBuildDate>
    
	<atom:link href="https://idc.wf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://idc.wf/menus/</link>
      <pubDate>Wed, 30 Dec 2015 23:35:29 +0000</pubDate>
      
      <guid>https://idc.wf/menus/</guid>
      <description> 人生乐趣  看书 看 RSS 看人 看世界  </description>
    </item>
    
    <item>
      <title>categories</title>
      <link>https://idc.wf/categories/</link>
      <pubDate>Wed, 21 Jun 2017 13:30:50 +0000</pubDate>
      
      <guid>https://idc.wf/categories/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tags</title>
      <link>https://idc.wf/tags/</link>
      <pubDate>Wed, 30 Dec 2015 23:35:35 +0000</pubDate>
      
      <guid>https://idc.wf/tags/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pi 安装 ssr，cow 备注</title>
      <link>https://idc.wf/docs/pi-ssrcow/</link>
      <pubDate>Wed, 28 Mar 2018 17:44:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/pi-ssrcow/</guid>
      <description>偶尔一次使用的东西，记一下！
ssr 安装 python sudo apt-get install python-pip python3-pip git htop  安装 ssr mkdir /srv/approot git clone https://github.com/ToyoDAdoubi/shadowsocksr shadowsocksr-doubi  配置 ssr nano /srv/approot/ssr-config/jp1.json { &amp;quot;server&amp;quot;: &amp;quot;0.0.0.0&amp;quot;, &amp;quot;server_ipv6&amp;quot;: &amp;quot;::&amp;quot;, &amp;quot;server_port&amp;quot;: 8388, &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;, &amp;quot;local_port&amp;quot;: 1080, &amp;quot;password&amp;quot;: &amp;quot;m&amp;quot;, &amp;quot;method&amp;quot;: &amp;quot;aes-128-ctr&amp;quot;, &amp;quot;protocol&amp;quot;: &amp;quot;auth_aes128_md5&amp;quot;, &amp;quot;protocol_param&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;obfs&amp;quot;: &amp;quot;tls1.2_ticket_auth_compatible&amp;quot;, &amp;quot;obfs_param&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;speed_limit_per_con&amp;quot;: 0, &amp;quot;speed_limit_per_user&amp;quot;: 0, &amp;quot;additional_ports&amp;quot; : {}, // only works under multi-user mode &amp;quot;timeout&amp;quot;: 120, &amp;quot;udp_timeout&amp;quot;: 60, &amp;quot;dns_ipv6&amp;quot;: false, &amp;quot;connect_verbose_info&amp;quot;: 0, &amp;quot;redirect&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;fast_open&amp;quot;: true }  启动 ssr 服务 sudo python3 /srv/approot/shadowsocksr-doubi/shadowsocks/local.</description>
    </item>
    
    <item>
      <title>yii2 用 asset 压缩js,css文件</title>
      <link>https://idc.wf/docs/yii-asset/</link>
      <pubDate>Mon, 10 Jul 2017 17:44:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/yii-asset/</guid>
      <description>偶尔一次使用的东西，记一下！
安装 java sudo apt-get install default-jre  安装压缩工具 compiler Yii 压缩 JavaScript 默认使用名为 compiler.jar 的 Google Closure compiler 压缩工具。 https://developers.google.com/closure/compiler/
yuicompressor Yii 压缩 CSS 使用名为 yuicompressor.jar 的YUI Compressor 压缩工具。 https://github.com/yui/yuicompressor/
生成默认配置脚本 yii asset/template asset.php  生成的模板如下:
&amp;lt;?php /** * &amp;quot;yii asset&amp;quot; 控制台命令的配置文件 * 注意控制台环境下有些路径别名可能不存在，如 &#39;@webroot&#39; 和 &#39;@web&#39; * 请先定义找不到的路径别名 */ // In the console environment, some path aliases may not exist. Please define these: Yii::setAlias(&#39;@webroot&#39;, __DIR__ . &#39;/backend/web/&#39;); Yii::setAlias(&#39;@web&#39;, &#39;/backend/web/&#39;); return [ // 为 JavaScript 文件压缩调整 command/callback 命令： &#39;jsCompressor&#39; =&amp;gt; &#39;java -jar compiler.</description>
    </item>
    
    <item>
      <title>使用 acme.sh 来更新 letsencrypt 证书</title>
      <link>https://idc.wf/docs/letsencrypt-cert/</link>
      <pubDate>Wed, 21 Jun 2017 12:55:52 +0000</pubDate>
      
      <guid>https://idc.wf/docs/letsencrypt-cert/</guid>
      <description>1. 安装 acme.sh 安装很简单, 一个命令:
curl https://get.acme.sh | sh  普通用户和 root 用户都可以安装使用. 安装过程进行了以下几步:
1) 把 acme.sh 安装到你的 home 目录下:
~/.acme.sh/  并创建 一个 bash 的 alias, 方便你的使用: acme.sh=~/.acme.sh/acme.sh
2). 自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书.
更高级的安装选项请参考: https://github.com/Neilpang/acme.sh/wiki/How-to-install
安装过程不会污染已有的系统任何功能和文件, 所有的修改都限制在安装目录中: ~/.acme.sh/
2. 生成证书 1. dns 方式, 在域名上添加一条 txt 解析记录, 验证域名所有权. 这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证.
acme.sh --issue --dns -d mydomain.com  然后, acme.sh 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 txt 记录即可.</description>
    </item>
    
    <item>
      <title>html 转为 pdf</title>
      <link>https://idc.wf/docs/html-to-pdf/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/html-to-pdf/</guid>
      <description>  使用 wkhtmltopdf
 安装
 下载地址：https://wkhtmltopdf.org/downloads.html Linux 环境下， 0.12.4 版本有问题，需要使用 0.12.3 版本。 不要使用 apt install 的方式安装，安装的为 0.12.4 版本。  示例代码
 python ``` import pdfkit   pdfkit.from_url(&amp;lsquo;https://wkhtmltopdf.org/docs.html&#39;, &amp;lsquo;out.pdf&amp;rsquo;)
pdfkit.from_file(&amp;lsquo;test.html&amp;rsquo;, &amp;lsquo;out.pdf&amp;rsquo;) pdfkit.from_string(&amp;lsquo;Hello!&amp;rsquo;, &amp;lsquo;out.pdf&amp;rsquo;)  2. php  &amp;lt;?php
include &amp;lsquo;./vendor/autoload.php&amp;rsquo;;
use mikehaertl\wkhtmlto\Pdf;
if (empty($_GET[&amp;lsquo;url&amp;rsquo;])) { die(); }
$pdf = new Pdf($_GET[&amp;lsquo;url&amp;rsquo;]); $pdf-&amp;gt;send(); ```
  </description>
    </item>
    
    <item>
      <title>Babyun 平板刷机</title>
      <link>https://idc.wf/docs/babyun-pad/</link>
      <pubDate>Wed, 18 May 2016 15:18:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/babyun-pad/</guid>
      <description>事由 120 块钱在 v2ex 上买了一个平板，至于买来干嘛？没想多。 于是，这里记录下刷机过程，省得之后再找。
引用 感谢 @mimzy
@mimzy : @slitaz 官方固件和刷机工具，找 M80 ，我用的是 AZ 批次： http://www.yuandaocn.com/fwzc_detail/&amp;amp;i=15&amp;amp;comContentId=15.html 改大分区教程： http://tieba.baidu.com/p/3324227239 为了确保驱动兼容性可能需要 Windows XP 系统，如果 SP Flash Tool 报错「由于应用程序配置不正确，应用程序未能启动」需要装 Microsoft Visual C++ 2008 Redistributable ， root 什么的感觉没必要折腾就没弄。  下载地址： 刷机工具和分区调整补丁： 百度云
注意事项  刷机之前拔掉电脑上连接的所有手机设备。 点击 download 下载 之后插上平板，等待自动刷机。 刷机工具弹出成功之后拔掉平板开机。 刷完之后记得摁 音量减 + 电源 进入工厂模式，选择 “清除EMMC” ，然后就可以愉快的玩耍了。  相关链接 出公司定制的 二手 8 寸平板， 120 元/台(非特殊地区包邮) 【线刷】原道 M80 Data 大分区 补丁 Vido 原道 下载中心</description>
    </item>
    
    <item>
      <title>使用Travis CI自动部署Hexo</title>
      <link>https://idc.wf/docs/travis-ci/</link>
      <pubDate>Fri, 13 May 2016 20:05:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/travis-ci/</guid>
      <description>前言 之前换过很多的静态博客系统，但是每个系统都需要本地做一定的部署，这点很麻烦。 Gor 倒是有可执行文件，但是本地部署的时候还是需要合并提交代码，还是略不爽。 今天在查 CI 系统的时候发现了 Travis CI ,于是，一切都很开心了。
关于 Travis CI 这是一个通过脚本来进行自动部署的系统，本身与 Github 高度集成，目前对于公开的项目免费支持。
开启travis-ci 首先去 Travis CI 官网，点击右上角Sign in with GitHub通过github授权登录。然后去到个人信息页面，开启需要使用 travis 的项目，在我这里就是 DrayChou/Blog-Hexo 。
密钥 因为需要通过脚本提交到 Github ，所以需要先申请一个 token ，避免密码或者证书问题造成的麻烦。 Token 申请地址是 https://github.com/settings/tokens 。 记得给予 public_repo 的权限，要不无法提交修改到 GitHub。 记得这个 token ，后面会用到。
Travis CI 的命令行工具 执行下面的命令安装命令行工具。 gem install travis  生成脚本 切换到 blog 的目录下，执行下面的命令，记得输入 node 语言
$ travis init detected repository as DrayChou/Blog-Pugo Main programming language used: |HTML| node .</description>
    </item>
    
    <item>
      <title>让域名邮箱支持通配符</title>
      <link>https://idc.wf/docs/mailgun/</link>
      <pubDate>Mon, 03 Aug 2015 15:30:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/mailgun/</guid>
      <description>目前手贱收了一个域名，想配置成支持泛域名解析的邮箱地址，即随便写名称都可以寄到的邮件。
之前有用 QQ 企业邮箱做过一个泛解析的域名，规则是错误的邮箱地址都转发到一个固定地址，参见地址 什么是错误地址转发功能？。
后来 Google Domails 推出后，推出了域名 EMAIL 服务，支持 * 通配符，于是开心了，参见地址About wildcard email forwarding。
但是，新入的域名 Google Domails 不支持这种后缀，于是在 @duyaoo 的推荐下，用了 mailgun 服务。
这个服务本身是作为商业邮件API使用的，自用算是小 case 。
按照教程设置玩 DNS 之后，添加一条 routes 规则，指定 什么地址的邮件发送到那个邮箱就可以了。
以后做小项目的时候也可以用 mailgun 来做邮箱地址托管了，赞一个。
注：
添加 mx 地址解析的时候 name 为 @ re 域名注册地址：[internetbs.net](https://internetbs.net/)  </description>
    </item>
    
    <item>
      <title>laravel 部署</title>
      <link>https://idc.wf/docs/laravel/</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/laravel/</guid>
      <description>看最近 laravel 好像蛮流行的，部署一个玩玩。
基础环境 composer $ curl -sS https://getcomposer.org/installer | php $ mv composer.phar /usr/local/bin/composer  这个就是传说中的 php 的包管理器了，之前没怎么用过。
PEAR Download PEAR
curl -O http://pear.php.net/go-pear.phar sudo php -d detect_unicode=0 go-pear.phar  Configure and Install PEAR
You should now be at a prompt to configure PEAR.
Type 1 and press return . Enter:
/usr/local/pear  Type 4 and press return .
Enter:
/usr/local/bin  Press return
Verify PEAR
You should be able to type:</description>
    </item>
    
    <item>
      <title>Mac 常用应用列表</title>
      <link>https://idc.wf/docs/mac-apps/</link>
      <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/mac-apps/</guid>
      <description>系统类 Moom 非常实用的窗口位置调整工具，哈哈，终于不用羡慕 windos 下面的 win + 箭头 快捷键了。  CleanMyMac2 几乎算是必备的工具了，清理系统什么的很好用的。  synergy 鼠标键盘共享工具，终于可以用一套鼠标键盘控制三台电脑了[mac, windows, ubuntu]。  cheatsheet 记不住帮助快捷键的某只最喜欢的东西。  live Wallpaper 啊，真好看的桌面背景阿。  freeMemory Pro 某只上次机器卡死之后找到的工具，这次不怕内存用尽了。  homebrew 几乎必备的 mac 包管理工具。  网络类 GoAgentX 墙内用户必备的应用，你懂的。  chrome 谷粉必备。  xmarks 书签跨平台同步必备啊，为了他，我 chrome, firefox 的书签同步功能都是关闭了的。  TeamViewer mac 也是可以远程办公的，就是因为这个。  YoruFukurou twitter 客户端，刚刚别的朋友哪里知道的，用着还不错，先加进来吧。  QQ 国内你懂的。  微信 国内你懂的。  开发类 zoc6 ssh 管理工具，这下不怕终端里分不清那台机器了。  oh-my-zsh zsh 扩展，哈哈，哈哈。  TextMate 我把它当作是 mac 机器上面的默认文本编辑器那样用。  Sublime Text 编辑简单的脚本文件的时候用。  PhpStorm 项目开发的时候用。  Tower 到目前为止，觉得最好的 mac 上的 git 客户端。  Navicat Premium 目前用习惯的数据库管理工具。  Araxis Merge 干净最好的版本管理工具。  Atom 装着玩的代码编辑器。  Emacs 装着练手的编辑器。  MacVim 装着练手的编辑器。  Mou markdown 编辑器，还行。  MadEdit 装来缅怀的跨平台编辑器。  Charles 跨平台的抓包工具，开发用。  待补充。</description>
    </item>
    
    <item>
      <title>python 版本 shadowsocks</title>
      <link>https://idc.wf/docs/pip-ss/</link>
      <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/pip-ss/</guid>
      <description>因为墙更高了， fqrouter 都用不了了，没办法，只能把之前的 ss 拿起来用了。 这次重新使用 python 版本的 ss。
首先，安装
apt-get update apt-get install python-pip python-m2crypto supervisor pip install shadowsocks  执行
service supervisor start supervisorctl reload  如果遇到问题，可以检查日志：
supervisorctl tail -f shadowsocks stderr  如果修改了 shadowsocks 配置 /etc/shadowsocks.json， 可以重启 shadowsocks：
supervisorctl restart shadowsocks  如果修改了 Supervisor 的配置文件 /etc/supervisor/*， 可以更新 supervisor 配置：
supervisorctl update  Shadowsocks 的服务单独启动方法：
ssserver -c /etc/shadowsocks.json -d start ssserver -c /etc/shadowsocks.json -d stop  结束。</description>
    </item>
    
    <item>
      <title>P2P 微薄</title>
      <link>https://idc.wf/docs/twister/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/twister/</guid>
      <description>twister 是
twister 本质上是一个不需要中心服务器的 twitter。 twister 不需要中心服务器，它使用基于比特币与 bt 下载的技术来构建一个 p2p 的网络，你的消息存放在这个 p2p 网络中，只要你在任何有互联网接入的地方，理论上都可以连入 twister 网络，使用全部功能。 twister 网络上没有任何管理员对你的言论进行审查与过滤！ 使用 twister 不需要翻墙。你的消息一经发表，无法删除！  所以，来愉快的玩耍吧。
官方地址 官方wiki
推荐 windows 下客户端：https://github.com/iShift/twister-webkit
顺便说一句，最近墙越来越高了。</description>
    </item>
    
    <item>
      <title>Shadowsocks 新手指南</title>
      <link>https://idc.wf/docs/shadowsocks/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/shadowsocks/</guid>
      <description>#Shadowsocks
shadowsocks 簡稱 ss 是一套的代理協議，包含服務端應用和客戶端應用。使用 ss:// 格式的鏈接協議來標識服務器地址。
客戶端 如果你已經有了服務器地址，那麼我們就直接來配置客戶端吧，如果沒有，那麼你需要去找IT男要一個，或者去 ShadowSocks公益组织 找一個吧。
參見： Shadowsocks 客戶端列表
Windows &amp;amp;&amp;amp; Linux &amp;amp;&amp;amp; OSX 鄙人平常主用 cow ,這個客戶端用 golang 語言編寫，是一个简化穿墙的 HTTP 代理服务器。它能自动检测被墙网站，仅对这些网站使用二级代理，支持 http,ssh 轉發 直接支持 ss ，所以可以用 cow 做二級代理來支持本地其他類型的代理。 比如： 用 cow 轉發 http,ssh,ss 到 pac 代理，讓本地的瀏覽器手機等可以無憂翻牆。
快速開始 OS X, Linux (x86, ARM): 执行以下命令（也可用于更新）
curl -L git.io/cow | bash  Windows: 点此下载
熟悉 Go 的用户可用 go get github.com/cyfdecyf/cow 从源码安装 编辑 ~/.cow/rc (Linux) 或 rc.txt (Windows)，简单的配置例子如下：</description>
    </item>
    
    <item>
      <title>Centos 常用命令备录</title>
      <link>https://idc.wf/docs/centos-commands/</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/centos-commands/</guid>
      <description> 安装包命令查找：
yum whatprovides */lspci
 查看主板型号：
dmidecode |grep -A16 &amp;ldquo;System Information$&amp;rdquo;
 内存槽及内存条：
dmidecode |grep -A16 &amp;ldquo;Memory Device$&amp;rdquo;
 硬盘：
fdisk -l smartctl -a /dev/sda HP SmartArray (cciss) hardware RAID controllers： smartctl -d cciss,0 -a /dev/cciss/c0d0
 网卡：
mii-tool
 scsi/raid卡：
lspci
 centos相关命令安装：
yum -y install smartmontools yum install pciutils -y
 centos 安装 htop
rpm 包下载地址: http://packages.sw.be/htop/ 安装命令： rpm –ivh htop-0.8.3-1.el4.rf.i386.rpm
 end
  </description>
    </item>
    
    <item>
      <title>ubuntu 安装命令行自动补全</title>
      <link>https://idc.wf/docs/ubuntu-bash-completion/</link>
      <pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-bash-completion/</guid>
      <description>ubuntu 安装命令行自动补全 ~# apt-get install bash-completion ~# source /etc/bash_completion  编辑/etc/bash.bashrc，在最后加入如下代码
[plain] if [ -f /etc/bash_completion ]; then /etc/bash_completion fi  重新登录</description>
    </item>
    
    <item>
      <title>关于通过 PushBullet API 推送信息的设想</title>
      <link>https://idc.wf/docs/pushbullet-api/</link>
      <pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/pushbullet-api/</guid>
      <description> 坑 我不喜欢 twitter 官方客户端 ，感觉官方客户端里 Timeline 乱乱的，平常都是使用 twidere 来用的。 但是 twidere 目前不支持推送，要实现推送必须有自己的服务器，自己的 google 注册应用，略麻烦了点，于是想到了 PushBullet ,如果她有 API 多好，查了下，果然有，然后一个“坑”出现了。
PushBullet PushBullet API 的官方介绍地址在这里 戳我 ,她的 API 太简单了，简直是我见过的最简单的 API 了。通篇上下只有2个接口，简单看下文档就会了，现说下注意事项。
api key  这个每个注册帐号都有一个，不区分开发账户，也没有开发账户，查看地址在：登录后查看 查询的时候需要调用 http 默认的 BasicAuth 认证方式，用户名就是 api key ，密码为空。  然后 然后你就可以不停的推送了，如果要推送给别人，也需要先得到对方的 api key ，至于推送给好友， 可以通过 get 的方式得到对方的 ID。
GO  https://www.pushbullet.com/api http://stackoverflow.com/questions/11361431/authenticated-http-client-requests-from-golang http://golang.org/pkg/net/http/#Request.SetBasicAuth  </description>
    </item>
    
    <item>
      <title>记一次 wsdl 服务的调用</title>
      <link>https://idc.wf/docs/php-soap-and-net-soap/</link>
      <pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-soap-and-net-soap/</guid>
      <description>公司业务要用到某 wsdl 的服务，使用 php5 自带的 soapclient 进行链接，屡次连不上，然后换 nusoap 包进行测试，还是不行，最后找到修改官方包 namespace 的方法才通过，记录下经验吧。
soapclient  官方推荐的调用对方函数的方法 _soapCall 函数调用如果失败，完全不输出任何信息。 这个包无法查看对方返回的 http 状态。 封装好的数据对方无法解析，直接报解析错误，需要继承并修改官方包，代码如下:   class MSSoapClient extends SoapClient { function __doRequest($request, $location, $action, $version) { $namespace = &amp;quot;http://adc.ecinterface/&amp;quot;; $request = preg_replace(&#39;/ $request = preg_replace(&#39;/ $request = str_replace(array(&#39;/ns1:&#39;, &#39;xmlns:ns1=&amp;quot;&#39; . $namespace . &#39;&amp;quot;&#39;), array(&#39;/&#39;, &#39;&#39;), $request); // parent call return parent::__doRequest($request, $location, $action, $version); } }  nusoap  发出去的数据因为不是系统级的封装，所以数据前会带上不少的噪音，对方完全无法识别。  总结  对于不了解的还是要多祭拜谷歌大神。 还是要多试。  参考地址 http://stackoverflow.</description>
    </item>
    
    <item>
      <title>动弹一下 - 我的第一个 Chrome 应用</title>
      <link>https://idc.wf/docs/oschina_tweet/</link>
      <pubDate>Thu, 06 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/oschina_tweet/</guid>
      <description> 之前不小心买了 Google 的开发者凭证，于是晋级为了开发者。但是，我完全不知道要拿来做什么。 最近比较关注的 oschina 开放了他的 api ，然后他们的 tweet[动弹] 我也有在用，发现还没有它的 Chrome 应用。于是，做点啥吧，就当练手了，不能白瞎了咱的开发者身份。
项目地址：  github:https://github.com/DrayChou/oschina_tweet oschina:http://git.oschina.net/drayc/oschina_tweet 应用地址：http://goo.gl/gsK4x3  项目介绍 项目目前实现了下面四个功能。
 最新动弹 热门动弹 我的动弹 动弹一下  其他的功能，在我发现 tweet 完全没有好友概念之后，就算了。反正拿出来的肯定是最新的，好友关系可有可无。 另：界面实在很简陋，等我有空再细细雕琢。
项目笔记  阅读了大量文档，明白了开发 chrome 应用的技术。 原来 javascript mvc 看起来也很爽。 熟练了 javascript 面向对象的编程方法 设计也不容易啊，不能光可以用就行。  </description>
    </item>
    
    <item>
      <title>开眼看世界之路</title>
      <link>https://idc.wf/docs/open-your-eyes/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/open-your-eyes/</guid>
      <description>开眼看世界 早百年前就有人说过要 开眼看世界 ，但是过了那么多年，我们还是看不到外面的东西，此文章就是收集这些能帮你看到外面世界的工具。
新手装备 所谓新手装备，就是只要打开就能用的，不需要技术含量的东西。
 greatagent  官网：https://code.google.com/p/greatagent/ 官网有教程，解压后运行 greatagent.bat 就会自动启动代理服务和浏览器，自动翻墙  firefox-goagent  官网：https://code.google.com/p/firefox-goagent/  chromeplus  官网：https://code.google.com/p/chromeplus/  fqrouter  官网：http://fqrouter.com/ android 下的利器 新手可通过 豌豆荚 等工具安装   我会折腾  GoAgent  官网：https://code.google.com/p/goagent/ 其实上面几款 windows 下面的应用都已经包含了 goagent ，会折腾的可以直接拆上面的集成包来用。   我有服务器  shadowsocks  官网：https://github.com/clowwindy/shadowsocks/wiki/Ports-and-Clients 本身包含 lib,go,python,nodejs&amp;hellip; 等服务器版本，搭配对应的客户端版本可以做到全终端覆盖。  ssh  直接使用 ssh 进行代理也是可以的 详细代理方法请自行谷歌  vpn  该法请自行谷歌搭建方法   我有钱 有钱的亲可以搜索购买下面对应的代理产品
 pac 代理  全系统支持，并且支持自动选择代理路由，支持  vpn  全系统支持，不过 vpn 是全局代理，有时候网速反而不好  shadowsocks  目前有 android 和 ios 客户端，但是 ios 客户端目前只能做到用内置浏览器翻墙  ssh  所有电脑端 和 android 无碍，ios 不清楚   我只是看看 只看看的诸位，可以谷歌 在线网页代理 ，临时看看页面什么的还是可以的。</description>
    </item>
    
    <item>
      <title>ubuntu 下面配置 go 运行环境</title>
      <link>https://idc.wf/docs/ubuntu-golang/</link>
      <pubDate>Sat, 30 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-golang/</guid>
      <description>Go 配置安装环境 go 的安装需要用到很多的 package, 所以需要很多版本管理应用的支持，所以首先安装这些环境
sudo apt-get install bison ed gawk gcc libc6-dev make python-setuptools python-dev build-essential git mercurial  安装Go 到 官方网站 根据机器型号下载相应的版本，然后执行语句解压，
$ tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz  我一般是放在 /usr/local/go 目录下
添加环境变量 #go config export GOROOT=/usr/local/go export GOARCH=amd64 export GOOS=linux export GOPATH=/srv/go_root export GOBIN=$GOROOT/bin export GOTOOLS=$GOROOT/pkg/tool/ export PATH=$PATH:$GOBIN:$GOTOOLS:$GOPATH/bin  其中 /usr/local/go 为 go 安装目录， /srv/go_root 为代码存放目录 把这些添加到 .bashrc 文件中，然后执行 source ~/.bashrc 刷新配置
Supervisor 有时候需要 go 持续运行不间断，但是用 crontab 并不方便，自己编写脚本也太麻烦，于是就可以用 Supervisor 了。</description>
    </item>
    
    <item>
      <title>在 Xampp 上配置 redis,mongodb,mariadb</title>
      <link>https://idc.wf/docs/xampp-redis-mongodb-mariadb/</link>
      <pubDate>Thu, 29 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/xampp-redis-mongodb-mariadb/</guid>
      <description>之前为了在本地调试方便，配置了这几个客户端在 xampp 下面的环境。现记录下
##程序
可以去官网下载，也可以用我分享出来的地址 [http://goo.gl/zOGQ9m](百度网盘)  ##安装
将下载下来的压缩包中的 dll 文件拷贝到 xampp\php\ext 目录下，目录和 bat 文件放在 xampp 目录下  ##配置
修改 xampp\php\php.ini 配置文件，添加下面几行 extension=php_mongo-1.4.0RC1-5.4-vc9.dll extension=php_igbinary.dll extension=php_redis.dll  ##执行
点击 redis_start.bat, mariadb_start.bat, mongodb_start.bat 来开启服务。 点击 redis_stop.bat, mariadb_stop.bat, mongodb_stop.bat 来关闭服务。  注：现在的网盘大竞争真是让很多人得了便宜啊，可以去放一些乱七八糟的东西上去了。</description>
    </item>
    
    <item>
      <title>在Ubuntu上创建只有访问权限的帐号</title>
      <link>https://idc.wf/docs/ubuntu-ssh-proxy/</link>
      <pubDate>Thu, 22 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-ssh-proxy/</guid>
      <description>ubuntu 首先SSH登录VPS，创建一个登录脚本： vi /bin/nologin.sh 在vim中按下i，添加下面的内容：
#!/bin/sh echo &amp;quot;&amp;quot; echo &amp;quot; ***********************************************************&amp;quot; echo &amp;quot; * Sorry,you can&#39;t Login by this way, press a key to exit. *&amp;quot; echo &amp;quot; ***********************************************************&amp;quot; echo &amp;quot;&amp;quot; read x exit  写完之后按esc，输入:wq回车保存。为此文件添加执行权限：
chmod 755 /bin/nologin.sh  添加一个用户到nogroup组，并且指定它的启动脚本：
useradd newuser -g nogroup -s /bin/nologin.sh  注意有些linux系统是添加到nobody组。最后更改一下这个用户的密码：
passwd newuser  本地调用代理的话使用
ssh -qTfnN -D 7070 username@sshserver.com  来生成本地 socks5 代理地址，或者安装 gstm 来配置代理。
sudo apt-get install gstm  centos 1，增加一个linux用户，并赋予该用户一个nologin的shell权限。</description>
    </item>
    
    <item>
      <title>樹莓派加裝攝像頭</title>
      <link>https://idc.wf/docs/pi-webcam/</link>
      <pubDate>Mon, 24 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/pi-webcam/</guid>
      <description>樹莓派買回來好久，一直也沒什麼地方用得上。這次折騰下攝像頭監控的東東。 首先，找一個樹莓派支持的攝像頭。我的是很久以前用過的一個，像素質量已經很差了。幾乎看不清東西，先將就用一下吧。
首先，插上攝像頭，執行下面命令查看是否已識別：
ls /dev  看看有沒有列出來 video1 這樣的設備，有的話就是支持的，沒有的話請自行查找驅動了。
上網查了下，大概有3種方法是比較常用的。
 fswebcam
sudo apt-get install fswebcam sudo fswebcam -d /dev/video0 -r 320x240 --bottom-banner --title &amp;quot;RaspberryPi&amp;quot; --no-timestamp /home/pi/yeelink.jpg  motion
sudo apt-get install motion sudo vi /etc/motion/motion.conf  找到”control_localhost on “和”webcam_localhost on“这两行，改为以下两行后，保存退出
control_localhost off webcam_localhost off  运行motion软件，输入
motion -n  在pc上用IE浏览器打开，下面網址進行監控設置 配置网页：http://192.168.1.114:8080 觀察网页：http://192.168.1.114:8081
 mplayer
sudo apt-get install mplayer sudo mplayer tv://   裝好之後就是在遠程查看了。motion 有網頁端，在局域網可以觀看，另外的兩個就可以配合 crontab 和 btsync 或者 dropbox 來進行遠程觀察。或者直接放到開放平臺Yeelink上共享出來。</description>
    </item>
    
    <item>
      <title>uWSGI&#43;Nginx run flask twip</title>
      <link>https://idc.wf/docs/uwsginginx-run-flask-twip/</link>
      <pubDate>Sun, 16 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/uwsginginx-run-flask-twip/</guid>
      <description>原文:http://ichon.me/post/999.html
twip.tar.gz:http://ichon.me/uploads/2013/02/twip.tar.gz
examples:https://github.com/yegle/flask_twip/tree/master/examples
安装uWSGI
使用pip：
pip install uwsgi  安装Flask-Twip
Flask-Twip是作为Flask的一个插件来安装的，安装依然只需要使用pip：
pip install Flask-Twip  配置Flask-Twip
由于 @yegle 湿兄并没有在examples中提供uWSGI运行的示例，所以只好自己动手，按照uWSGI运行的方式改写了示例程序，并且将其打包 twip.tar.gz
只需将其解压到网站的目录，比如/home/www
tar zxvf twip.tar.gz -C /home/www  然后修改配置文件settings.py，填写好在dev.twitter.com申请到的TWITTER_CONSUMER_KEY和TWITTER_CONSUMER_SECRET，至于SECRET_KEY嘛，就随便填好了～ 运行uWSGI
我写了个uWSGI运行Flask程序的脚本server(在twip.tar.gz中)，只需要给其增加可执行权限：
chmod +x server  执行./server start就可以启动uWSGI，同理，执行./server restart和./server stop可以重启和停止uWSGI。
查看log文件/tmp/uwsgi-twip.log，如果没有任何错误，就说明uWSGI已经成功运行。 配置Nginx
光有uWSGI是不能够运行Flask-Twip的，我们还需要Nginx作为Web Server，只需要修改Nginx的配置文件，增加一个server，如下所示：
server { listen 80; server_name www.example.com; location / { include uwsgi_params; uwsgi_pass unix:/tmp/uwsgi-twip.sock; } location ^~ /twip/static/ { alias /home/www/twip/static/; } }  重启Nginx，如果一切顺利的话，就可以在 http://www.example.com/twip/ 看到熟悉的Twip界面了～
ps:之前的 server 文件有误，修改 -C 666 为 &amp;ndash;chmod-socket=666</description>
    </item>
    
    <item>
      <title>ubuntu nginx php shell</title>
      <link>https://idc.wf/docs/ubuntu-nginx-php-shell/</link>
      <pubDate>Sun, 16 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-nginx-php-shell/</guid>
      <description>ubuntu 下一键安装 nginx php 的环境
 nginx 配置参考：
server { listen 80; server_name 127.0.0.1 localhost; root /usr/share/nginx/html/www; index index.php index.html index.htm; location ~ .*\.php(\/.*)*$ { include fastcgi.conf; fastcgi_split_path_info ^(.+\.php)(/.+)$; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_index index.php; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffers 8 256k; fastcgi_buffer_size 256k; fastcgi_busy_buffers_size 256k; fastcgi_temp_file_write_size 256k; client_max_body_size 20M; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; } }  主要是配置缓存大小</description>
    </item>
    
    <item>
      <title>ubuntu nginx ssl</title>
      <link>https://idc.wf/docs/nginx-ssl/</link>
      <pubDate>Sun, 16 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/nginx-ssl/</guid>
      <description>原文：http://www.douban.com/note/248058067/
安装应用并生成证书
apt-get install ssl-cert make-ssl-cert /usr/share/ssl-cert/ssleay.cnf /etc/ssl/private/blog.crt  然后输入主机名
生成证书为
cat /etc/ssl/private/blog.crt  编辑文件并在里面填入我们得到以上文件 的 —–BEGIN PRIVATE KEY—– 和 —–END PRIVATE KEY—- 之间的部分
vi /etc/ssl/private/blog.key chmod 600 /etc/ssl/private/blog.key  编辑文件并在里面填入得到的文件的下半部分 ， —–BEGIN RSA PRIVATE KEY—– 跟 —–END RSA PRIVATE KEY—– 之间
vi /etc/ssl/certs/blog.pem  现在我们就可以把 /etc/ssl/private/blog.crt 删除了 。
rm -f /etc/ssl/private/blog.crt  修改 nginx 文件在 server { 和 } 之间 添加
listen 443 ssl; listen [::]:443 ipv6only=on ssl; ssl_certificate /etc/ssl/certs/blog.</description>
    </item>
    
    <item>
      <title>VPS上使用DropBox定时备份方案</title>
      <link>https://idc.wf/docs/vps-dropbox/</link>
      <pubDate>Thu, 13 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/vps-dropbox/</guid>
      <description>原文地址:http://www.deepvps.com/dropbox-backup.html
这个备份方案是直接使用dropbox同步，如果想实时同步就一直守护dropbox进程，会占用一定资源。推荐小内存VPS的同学和deepvps一样使用cron定时备份。 1.linux上安装dropbox
32位linux
wget -O dropbox.tar.gz http://www.dropbox.com/download?plat=lnx.x86  64位linux
wget -O dropbox.tar.gz http://www.dropbox.com/download?plat=lnx.x86_64  解压：
tar xzvf dropbox.tar.gz  第一次运行生成host_id
~/.dropbox-dist/dropboxd &amp;amp;  生成id后，将host_id替换下面链接后面的字符在浏览器打开，输入你的帐号密码就绑定机器了．
https://www.dropbox.com/cli_link?host_id=XXXXXXXXXXXXXXXXXXX  2.建立连接备份网站
正式开始同步你的网站，通过ln软链接你所有要备份的目录，例如：
cd ~/Dropbox ln -s /home/wwwroot/html ln -s /home/wwwroot/htdocs ．．．  开始运行同步，美国的vps同步速度非常快的，1G的html文件，只花了几分钟全部同步完成
~/.dropbox-dist/dropboxd &amp;amp;  3.为了节省资源，可以不使用实时同步，只定时打开同步一天的文件再关掉以节省资源。
先关掉同步：
killall dropbox  编写定时同步脚本：
vi backup.sh  代码如下：
#!/bin/sh start() { echo starting dropbox /root/.dropbox-dist/dropboxd &amp;amp; } stop() { echo stoping dropbox pkill dropbox } case “$1″ in start) start ;; stop) stop ;; restart) stop start ;; esac  定时运行和关闭：</description>
    </item>
    
    <item>
      <title>ubuntu 下 sublime text2 配置</title>
      <link>https://idc.wf/docs/sublime-text2-config/</link>
      <pubDate>Tue, 16 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/sublime-text2-config/</guid>
      <description>习惯了 sublime text 2 在 ubuntu 下面也装了一个，下面是记录了我的一些配置
开启插件 如果 Package Control 已经安装成功，那么 Ctrl+Shift+P 调用命令面板，我们就会找到一些以“Package Control:”开头的命令，我们常用到的就是几个 Install Package (安装扩展)、List Packages (列出全部扩展)、Remove Package (移除扩展)、Upgrade Package (升级扩展)。但如果你按照上面的方法确实搞不定，可以试试按键盘 Ctrl+~ （数字1左边的按键）调出控制台，然后拷贝下面的代码进去并回车，它会自动帮你新建文件夹并下载文件的，与上面的方法最终效果是一样的：
import urllib2,os; pf=&#39;Package Control.sublime-package&#39;; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),&#39;wb&#39;).write(urllib2.urlopen(&#39;http://sublime.wbond.net/&#39;+pf.replace(&#39; &#39;,&#39;%20&#39;)).read()); print &#39;Please restart Sublime Text to finish installation&#39;  常用插件  BracketHighlighter: 大括號、中括號、括號家族高亮匹配 Clipboard History：剪切板历史 ConvertToUTF8：ST2只支持utf8编码，该插件可以显示与编辑 GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等编码的文件 cssFormat: css 格式化 cssTidy: 整理与排版css代码 ctags: 函数跳转 CTags for php: php 支持文件 Format sql: sql 格式化 Github Tools: github 工具 Gits：可以轻松集成 GitHub HtmlTidy：清理与排版你的HTML代码 jQuery: jQuery支持插件 JsFormat: 格式化js代码 Markdown Preview: markdown 预览插件 phpTidy：整理与排版php代码 PythonTidy: python 代码整理插件 SFTP：直接编辑 FTP 或 SFTP 服务器上的文件 SideBarEnhancements: 侧栏右键功能增强，非常实用 SublimeLinter: 一个支持lint语法的插件，可以高亮linter认为有错误的代码行，也支持高亮一些特别的注释，比如“TODO”，这样就可以被快速定位。 sublimemerge: 文件比较 YUI Compressor：压缩JS和css文件  输入法问题 快捷键冲突 在 preferences-&amp;gt;key bindings-default 中，找到与输入法默认快捷键 ctrl+space 冲突的配置，复制并修改一份存到 key bindings- user 中。</description>
    </item>
    
    <item>
      <title>gedit 插件</title>
      <link>https://idc.wf/docs/gedit-plugin/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/gedit-plugin/</guid>
      <description>SublimeText 在 ubuntu 下面中文输入有问题，所以先把 gedit 配置起来盯着吧。
 安装插件包
sudo apt-get install gedit-plugins  安装 Gmate
sudo apt-add-repository ppa:ubuntu-on-rails/ppa sudo apt-get update sudo apt-get install gedit-gmate  安装 TextMate 自动补全插件
Download the latest version gedit-tm-autocomplete-1.0.5.tar.gz from the downloads page Extract the archive and run install.sh Restart Gedit Enable &amp;ldquo;TextMate Style Autocompletion&amp;rdquo; in Edit-&amp;gt;Preferences-&amp;gt;plugins
  好了，就暂时这样用着吧</description>
    </item>
    
    <item>
      <title>ubuntu grub boot windows7 error</title>
      <link>https://idc.wf/docs/ubuntu-grub-boot-windows7-error/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-grub-boot-windows7-error/</guid>
      <description>手贱，我修改了双系统中 win7 的启动顺序，修改的时候，用的是下面的方法：
在Ubuntu终端下输入： $sudo vim /etc/default/grub sudo是使用root权限，vim是用vi文本编辑器打开etc文件夹下的default文件夹下的grub文件。 在打开的文本中修改“GRUB_DEFAULT=0”这一项。比如win7在启动项列表中为第5项，则将0改为4。就是win7在启动项列表中的项数减1。 （这里还可以修改该在启动项列表等待的时间，即修改“GRUB_TIMEOUT=所要等待的秒数”，-1表示不倒计时。） 修改完后按[Ctrl]+X，会提示是否保存，输入Y，提示保存的文件名，还是原来的grub文件，所以直接回车确定。 $sudo update-grub，更新一下grub。  然后重启的时候，默认的选项确实也变成了 win7 ，但是进入后确提示：
a disk read error occurred Press Ctrl+Alt+del  这个问题折腾了一下午加一晚上才修复，这里顺手记下，省得以后再犯错。
因为出错的时候事实上，我的 windows7 有一个独立的 100mb boot 引导分区，这个分区正常来说应该可以引导我的 windows7 进入系统的。 但是，不知道为什么，就是不行，后来我修改启动文件，把 windows7 的引导指向 c 盘的那个分区，还是不行。再后来，我直接把那 100mb 的引导分区，update grub 还是不行。 没辙，google 之，搜到 boot-repair[https://help.ubuntu.com/community/Boot-Repair]。下载下来，修复一次，然后用 windows cd 修复一次引导，ok,完好如初。</description>
    </item>
    
    <item>
      <title>ubuntu sources list</title>
      <link>https://idc.wf/docs/ubuntu-sources-list/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-sources-list/</guid>
      <description>当前我的 ubuntu 源列表
# deb cdrom:[Ubuntu 12.10 _Quantal Quetzal_ - Release amd64 (20121017.5)]/ quantal main restricted deb http://archive.ubuntu.com/ubuntu/ quantal main restricted deb http://security.ubuntu.com/ubuntu/ quantal-security main restricted deb http://archive.ubuntu.com/ubuntu/ quantal-updates main restricted # See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to # newer versions of the distribution. deb http://cn.archive.ubuntu.com/ubuntu/ quantal main restricted deb-src http://cn.archive.ubuntu.com/ubuntu/ quantal main restricted ## Major bug fix updates produced after the final release of the ## distribution. deb http://cn.</description>
    </item>
    
    <item>
      <title>ubuntu sources update error</title>
      <link>https://idc.wf/docs/ubuntu-sources-update-error/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-sources-update-error/</guid>
      <description>今天在执行 apt-get update 的时候报错，报错内容如下：
W: Duplicate sources.list entry http://extras.ubuntu.com/ubuntu/ precise/main amd64 Packages (/var/lib/apt/lists/extras.ubuntu.com_ubuntu_dists_precise_main_binary-amd64_Packages) W: Duplicate sources.list entry http://extras.ubuntu.com/ubuntu/ precise/main amd64 Packages (/var/lib/apt/lists/extras.ubuntu.com_ubuntu_dists_precise_main_binary-amd64_Packages) W: Duplicate sources.list entry http://extras.ubuntu.com/ubuntu/ precise/main i386 Packages (/var/lib/apt/lists/extras.ubuntu.com_ubuntu_dists_precise_main_binary-i386_Packages) W: Duplicate sources.list entry http://extras.ubuntu.com/ubuntu/ precise/main i386 Packages (/var/lib/apt/lists/extras.ubuntu.com_ubuntu_dists_precise_main_binary-i386_Packages) W: You may want to run apt-get update to correct these problems  在网上搜索后得知，这是因为以上几条，与
deb http://extras.ubuntu.com/ubuntu precise main deb-src http://extras.ubuntu.com/ubuntu precise main  冲突了，于是修改这部分源代码为：
# deb http://security.ubuntu.com/ubuntu quantal-security main restricted # deb-src http://security.</description>
    </item>
    
    <item>
      <title>ubuntu 安装 Ruby, Rails 运行环境</title>
      <link>https://idc.wf/docs/ubuntu-ruby/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-ruby/</guid>
      <description>步骤0 － 安装系统需要的包
Ubuntu 请安装
$ sudo apt-get install -y build-essential openssl curl libcurl3-dev libreadline6 libreadline6-dev git zlib1g zlib1g-dev libssl-dev libyaml-dev libxml2-dev libxslt-dev autoconf automake libtool imagemagick libmagickwand-dev libpcre3-dev libsqlite3-dev libmysql-ruby libmysqlclient-dev  步骤1 － 安装 RVM
RVM 是干什么的这里就不解释了，后面你将会慢慢搞明白。
$ curl -L https://get.rvm.io | bash -s stable  等待一段时间后就可以成功安装好 RVM。
然后，载入 RVM 环境（新开 Termal 就不用这么做了，会自动重新载入的）
$ source ~/.rvm/scripts/rvm  检查一下是否安装正确
$ rvm -v rvm 1.17.3 (stable) by Wayne E. Seguin &amp;lt;wayneeseguin@gmail.</description>
    </item>
    
    <item>
      <title>30而立</title>
      <link>https://idc.wf/docs/30-year-old/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/30-year-old/</guid>
      <description>人常说30而立，哎</description>
    </item>
    
    <item>
      <title>设置 google chrome protable 为默认浏览器</title>
      <link>https://idc.wf/docs/google-chrome-as-system-default-browse/</link>
      <pubDate>Sat, 16 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/google-chrome-as-system-default-browse/</guid>
      <description>以下是 win7 下设置 google chrome protable 为默认浏览器的 注册表文件
1) chrome.reg:
Windows Registry Editor Version 5.00 [HKEY_LOCAL_macHINE\SOFTWARE\RegisteredApplications] &amp;quot;chrome Portable&amp;quot;=&amp;quot;Software\\Clients\\StartMenuInternet\\GooglechromePortable\\Capabilities&amp;quot; [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable\Capabilities] &amp;quot;ApplicationName&amp;quot;=&amp;quot;Google chrome Portable&amp;quot; &amp;quot;ApplicationDescription&amp;quot;=&amp;quot;Google chrome Portable is a web browser that runs web pages and applications with lightning speed. It&#39;s designed to be simple and stylish. It&#39;s packaged as a portable app, so you can take your browsing experience with you.&amp;quot; &amp;quot;ApplicationIcon&amp;quot;=&amp;quot;\&amp;quot;D:\\Softwares\\Portable\\Extracted\\GooglechromePortable\\GooglechromePortable.exe\&amp;quot;,0&amp;quot; &amp;quot;Hidden&amp;quot;=dword:00000000 [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable\Capabilities\FileAssociations] &amp;quot;.htm&amp;quot;=&amp;quot;GooglechromePortableHTML&amp;quot; &amp;quot;.html&amp;quot;=&amp;quot;GooglechromePortableHTML&amp;quot; &amp;quot;.shtml&amp;quot;=&amp;quot;GooglechromePortableHTML&amp;quot; &amp;quot;.xht&amp;quot;=&amp;quot;GooglechromePortableHTML&amp;quot; &amp;quot;.xhtml&amp;quot;=&amp;quot;GooglechromePortableHTML&amp;quot; [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable\Capabilities\StartMenu] &amp;quot;StartMenuInternet&amp;quot;=&amp;quot;GooglechromePortable&amp;quot; [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable\Capabilities\URLAssociations] &amp;quot;http&amp;quot;=&amp;quot;GooglechromePortableURL&amp;quot; &amp;quot;https&amp;quot;=&amp;quot;GooglechromePortableURL&amp;quot; &amp;quot;ftp&amp;quot;=&amp;quot;GooglechromePortableURL&amp;quot; [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable] &amp;quot;LocalizedString&amp;quot;=&amp;quot;Google chrome Portable&amp;quot; &amp;quot;&amp;quot;=&amp;quot;Google chrome Portable&amp;quot; [HKEY_LOCAL_macHINE\SOFTWARE\Clients\StartMenuInternet\GooglechromePortable\DefaultIcon] &amp;quot;&amp;quot;=&amp;quot;\&amp;quot;D:\\Softwares\\Portable\\Extracted\\GooglechromePortable\\GooglechromePortable.</description>
    </item>
    
    <item>
      <title>在 ubuntu 11.10 下安装 Ruby on Rails</title>
      <link>https://idc.wf/docs/insert-ruby-on-rails-in-ubuntu-11-dot-10/</link>
      <pubDate>Wed, 29 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/insert-ruby-on-rails-in-ubuntu-11-dot-10/</guid>
      <description>安装常用到组件
sudo apt-get install git curl  安装 rvm
1.配置
bash &amp;lt; &amp;lt;(curl -s https://rvm.beginrescueend.com/install/rvm)  2.修改控制台配置文件，将 rvm 添加到命令控制台
gedit ~/.bashrc  3.在 .bashrc 最后添加
[[ -s &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot; # Load RVM into a shell session *as a function*  4.更新控制台配置：
source ~/.bashrc  5.测试 rvm 是否正确安装
type rvm | head -1  如果显示出来 rvm is a function 或者 rvm 是个函数 那么就证明 rvm 安装成功
6.执行 rvm 命令，查看都需要安装那些组件</description>
    </item>
    
    <item>
      <title>上传文件夹</title>
      <link>https://idc.wf/docs/upload-folders/</link>
      <pubDate>Fri, 17 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/upload-folders/</guid>
      <description>最近公司的产品要用到上传目录的功能，所以查了一些资料，现记录下来。
现有的方案：
http://www.cnblogs.com/xproer/archive/2010/10/24/1859895.html 国内的收费版本，支持大部分微软的脚本语言，实用 Activex 控件实现 http://slickupload.com/ 国外的，社区版免费，只支持最新版的浏览器，应该是html5的方式实现的  资料：
http://blog.sina.com.cn/s/blog_4c6e822d0102dsma.html 遍历上传目录的 asp.net 版本 http://www.cnblogs.com/qingyuan/articles/1519057.html 压缩目录上传再解压的例子 asp.net http://www.example-code.com/vbdotnet/ftpUploadTree.asp ftp 的方式上传文件 vb.net http://topic.csdn.net/t/20061110/15/5148605.html csdn 讨论贴 http://q.cnblogs.com/q/24221/ cnblog 讨论贴 http://www.aurigma.com/docs/iu7/uploading-folders-in-aspnet.htm Uploading Folders in ASP.NET http://www.cnwing.net/u/catinnight/200982111713.shtml upload 说明  发现基本实现的思想基本上分以下几种：
 使用组件，比如 Activex 组件或者 java 组件，这些组件都是需要客户端下载并同意使用的。例如，网易相册，QQ相册等。可惜，我不会写这些东西。 asp.net 貌似可以通过遍历查询传递过来的目录下的内容，来批量将文件加入上传列表，来实现上传目录的功能。 使用zip等压缩工具压缩之后再上传，但是需要先授权调用外部的压缩程序，貌似也只有.net能做到这个吧。 使用ftp的方式上传，需要服务器开启ftp权限。  好吧，就这样，不知道经理怎么选，不过使用.net开发windows专用的网站看来还是比较简单的啊。</description>
    </item>
    
    <item>
      <title>Hello Octopress</title>
      <link>https://idc.wf/docs/hello-octopress/</link>
      <pubDate>Mon, 06 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/hello-octopress/</guid>
      <description>Octopress 是一个很不错的 blog 程序，好处我就不说了，自己查文档，现在把我安装时碰到的问题记录下来，供后来的朋友参考。
从wordpress导出数据 我参考前面诸位写出来的ruby代码：wordpress2Markdown
这个ruby脚本的功能：
 循环匹配多种代码块，替换为 octopress 格式的代码块 替换url中的汉字为拼音，并去掉不能转换的标点符号等 输出文件到 ansi as utf-8 格式的文件中，避免中文字符乱码  我碰到的问题 第一个:
rake aborted! You have already activated rake 0.9.2.2, but your Gemfile requires rake 0.9.2. U sing bundle exec may solve this. (See full trace by running task with --trace)  解决：
bundle exec rake  用上面的语句替代 rake 执行命令
第二个:
* * Invoke generate (first_time) * * Execute generate # # Generating Site with Jekyll Unchanged sass/screen.</description>
    </item>
    
    <item>
      <title>Windows 下的 Nodejs</title>
      <link>https://idc.wf/docs/under-windows-nodejs/</link>
      <pubDate>Mon, 26 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/under-windows-nodejs/</guid>
      <description>&lt;p&gt;&lt;h2&gt;为什么搞这个？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;公司电脑的权限管理比较严，不能安装软件，不能常驻系统进程等，所以像 xampp 之类的都不能正常执行&lt;/li&gt;
    &lt;li&gt;我又想在空闲的时候做点东西&lt;/li&gt;
    &lt;li&gt;所以坑爹的我只能自己研究在windows下运行nodejs了&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>修改 vs2010 默认浏览器</title>
      <link>https://idc.wf/docs/xiu-gai-vs2010-mo-ren-liu-lan-qi/</link>
      <pubDate>Tue, 06 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/xiu-gai-vs2010-mo-ren-liu-lan-qi/</guid>
      <description>修改该目录里的配置文件
C:\users\[登陆账户ID]\AppData\Local\Microsoft\VisualStudio\10.0\browsers.xml  修改为
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&amp;lt;browserinfo&amp;gt;&amp;lt;browser&amp;gt;&amp;lt;name&amp;gt;Mozilla Firefox&amp;lt;/name&amp;gt;&amp;lt;path&amp;gt;&amp;quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&amp;quot;&amp;lt;/path&amp;gt;&amp;lt;resolution&amp;gt;0&amp;lt;/resolution&amp;gt;&amp;lt;isdefault&amp;gt;True&amp;lt;/isdefault&amp;gt;&amp;lt;/browser&amp;gt;&amp;lt;browser&amp;gt;&amp;lt;name&amp;gt;Internet Explorer&amp;lt;/name&amp;gt;&amp;lt;path&amp;gt;&amp;quot;C:\Program Files (x86)\Internet Explorer\iexplore.exe&amp;quot;&amp;lt;/path&amp;gt;&amp;lt;resolution&amp;gt;0&amp;lt;/resolution&amp;gt;&amp;lt;isdefault&amp;gt;False&amp;lt;/isdefault&amp;gt;&amp;lt;dde&amp;gt;&amp;lt;service&amp;gt;IExplore&amp;lt;/service&amp;gt;&amp;lt;topicopenurl&amp;gt;WWW_OpenURL&amp;lt;/topicopenurl&amp;gt;&amp;lt;itemopenurl&amp;gt;&amp;quot;%s&amp;quot;,,0xffffffff,3,,,,&amp;lt;/itemopenurl&amp;gt;&amp;lt;topicactivate&amp;gt;WWW_Activate&amp;lt;/topicactivate&amp;gt;&amp;lt;itemactivate&amp;gt;0xffffffff,0&amp;lt;/itemactivate&amp;gt;&amp;lt;/dde&amp;gt;&amp;lt;/browser&amp;gt;&amp;lt;/browserinfo&amp;gt;  然后保存为只读，Ok了</description>
    </item>
    
    <item>
      <title>Ubuntu 上安装 LAMP 服务器</title>
      <link>https://idc.wf/docs/ubuntu-shang-an-zhuang-lamp-fu-wu-qi/</link>
      <pubDate>Sun, 25 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-shang-an-zhuang-lamp-fu-wu-qi/</guid>
      <description>sudo tasksel  直接从列表中选择LAMP套件，重启自动完成</description>
    </item>
    
    <item>
      <title>Ubuntu 11.10 Beta 2 (Oneiric Ocelot) 发布了</title>
      <link>https://idc.wf/docs/ubuntu-11-10-beta-2-oneiric-ocelot-fa-bu-liao/</link>
      <pubDate>Fri, 23 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-11-10-beta-2-oneiric-ocelot-fa-bu-liao/</guid>
      <description>下载地址：
http://www.ubuntu.com/testing/download (Ubuntu and Ubuntu Server) http://releases.ubuntu.com/oneiric/ (Ubuntu, Ubuntu Server) http://cloud-images.ubuntu.com/releases/oneiric/beta-2/ (Ubuntu Cloud Images) http://cdimage.ubuntu.com/releases/oneiric/beta-2/ (Ubuntu DVD, Alternates, pre-installed ARM Images) http://cdimage.ubuntu.com/netboot/11.10/ (Ubuntu Netboot) http://releases.ubuntu.com/kubuntu/oneiric/ (Kubuntu) http://cdimage.ubuntu.com/kubuntu/releases/oneiric/beta-2/ (Kubuntu DVD) http://cdimage.ubuntu.com/xubuntu/releases/oneiric/beta-2/ (Xubuntu) http://cdimage.ubuntu.com/edubuntu/releases/oneiric/beta-2/ (Edubuntu) http://cdimage.ubuntu.com/ubuntustudio/releases/oneiric/beta-2/ (Ubuntu Studio) http://cdimage.ubuntu.com/mythbuntu/releases/oneiric/beta-2/ (Mythbuntu) http://cdimage.ubuntu.com/lubuntu/releases/oneiric/beta-2/ (Lubuntu)
The final version of Ubuntu 11.10 is expected to be released on October 13 2011.</description>
    </item>
    
    <item>
      <title>Ubuntu 删除已安装的桌面</title>
      <link>https://idc.wf/docs/delete-ubuntu-desktop/</link>
      <pubDate>Fri, 23 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/delete-ubuntu-desktop/</guid>
      <description>##Remove Kubuntu Paste this command into the terminal:
sudo apt-get remove akonadi-server akregator amarok amarok-common amarok-utils appmenu-qt apport-kde apturl-kde ark bluedevil cdparanoia cdrdao docbook-xsl dolphin dragonplayer freespacenotifier gdebi-core gdebi-kde gnupg-agent gnupg2 gpgsm gtk2-engines-oxygen gwenview ibus-qt4 icoutils jockey-kde k3b k3b-data kaddressbook kamera kate kcalc kde-config-gtk kde-config-touchpad kde-window-manager kde-zeroconf kdebase-bin kdebase-data kdebase-runtime kdebase-runtime-data kdebase-workspace kdebase-workspace-bin kdebase-workspace-data kdebase-workspace-kgreet-plugins kdegames-card-data kdegraphics-libs-data kdegraphics-strigi-plugins kdelibs-bin kdelibs5-data kdelibs5-plugins kdemultimedia-kio-plugins kdenetwork-filesharing kdepasswd kdepim-groupware kdepim-kresources kdepim-runtime kdepim-strigi-plugins kdepim-wizards kdepimlibs-kio-plugins kdesudo kdm kdoctools kfind khelpcenter4 kinfocenter klipper kmag kmail kmix kmousetool knm-runtime knotes konsole kontact kopete kopete-message-indicator korganizer kpackagekit kpat kppp krdc krfb krosspython ksnapshot ksysguard ksysguardd ksystemlog ktimetracker ktorrent ktorrent-data kubuntu-debug-installer kubuntu-default-settings kubuntu-desktop kubuntu-docs kubuntu-firefox-installer kubuntu-konqueror-shortcuts kubuntu-netbook-default-settings kubuntu-notification-helper kvkbd kwalletmanager language-selector-kde libakonadi-contact4 libakonadi-kabc4 libakonadi-kcal4 libakonadi-kde4 libakonadi-kmime4 libakonadiprotocolinternals1 libao-common libao4 libasyncns0 libattica0 libaudio2 libbluedevil1 libboost-program-options1.</description>
    </item>
    
    <item>
      <title>彻底解决sysfader: IEXPLORE.EXE应用程序错误</title>
      <link>https://idc.wf/docs/solve-sysfader-iexplore-exe-application-error/</link>
      <pubDate>Fri, 20 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/solve-sysfader-iexplore-exe-application-error/</guid>
      <description>今天碰到一个用户出现 sysfader: IEXPLORE.EXE应用程序错误， 这个用户的浏览器是IE8，这个错误只在IE8下出现，换了别的浏览器或者兼容模式都没问题，老大提醒说是JS有问题，但是。。。 我检查了一下代码，别的用户怎么没这个问题，要知道JS都一样的啊，而且用户也没有自己引用JS啊【我们的产品允许用户用html代码编辑自己的主页】。。。
笨方法：一段一段删掉，看看还会不会报错，最后锁定了这段代码：
奇怪为什么单单IE8过滤不了这个，看来IE8也不咋地啊，对微软的产品真是印象很差啊。。。 看网上好多用户怎么怎么折腾的方法，其实这个问题还是要问网站的，要是网站代码写的很规范的话就不会出这个问题啦。。。
&amp;lt;font color=&amp;quot;#00ff00&amp;quot; size=&amp;quot;\&amp;quot;\&#39;\\\&amp;quot;&amp;quot;&amp;gt; &amp;lt;span&amp;gt; &amp;lt;span&amp;gt; &amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;FONT-FAMILY: 宋体; COLOR: #0000ff; FONT-SIZE: 18px&amp;quot;&amp;gt; &amp;lt;span style=&amp;quot;COLOR: #00ffff&amp;quot;&amp;gt; &amp;lt;span style=&amp;quot;COLOR: #00ff00; FONT-SIZE: 18px&amp;quot;&amp;gt; &amp;lt;span style=&amp;quot;COLOR: #ff00ff; FONT-SIZE: 14px&amp;quot;&amp;gt; &amp;lt;strong&amp;gt; 百度空间地址： &amp;lt;/strong&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;a href=&amp;quot;http://hi.baidu.com/%C3%97%C3%97%C3%97%C3%97/space&amp;quot;&amp;gt; &amp;lt;span style=&amp;quot;COLOR: #00ff00; FONT-SIZE: 18px&amp;quot;&amp;gt; &amp;lt;em&amp;gt; &amp;lt;strong&amp;gt; http://hi.baidu.com/××××/space &amp;lt;/strong&amp;gt; &amp;lt;/em&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/font&amp;gt;  好嘛，你们看到了什么？ size=&amp;rdquo;\&amp;rdquo;\&amp;rsquo;\\&amp;ldquo;&amp;rdquo; 没错，就是它，看看你把自由给了用户，他们就会放些奇怪的东西进来，就是这句话 &amp;ldquo;\&amp;rdquo;\&amp;rsquo;\\&amp;ldquo;&amp;rdquo; quot;&amp;rdquo;
，删掉所有的这些不能被IE8识别并编译的怪语句之后，搞定。。。
奇怪为什么单单IE8过滤不了这个，看来IE8也不咋地啊，对微软的产品真是印象很差啊。。。 看网上好多用户怎么怎么折腾的方法，其实这个问题还是要问网站的，要是网站代码写的很规范的话就不会出这个问题啦。。。</description>
    </item>
    
    <item>
      <title>利用jquery自动生成导航目录</title>
      <link>https://idc.wf/docs/automatically-generated-navigation-menu-using-jquery/</link>
      <pubDate>Tue, 17 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/automatically-generated-navigation-menu-using-jquery/</guid>
      <description>翻译自：http://www.jankoatwarpspeed.com/post/2009/08/20/Table-of-contents-using-jQuery.aspx 原文提供了3种样式，但是基本思想都是一样，那就是利用jquery选择器找到文章中的h1,h2,h3标签，修改这个标签的ID并生成对应的锚点链接地址。
第一种：
文章内容应该类似这样，由h1,h2,h3等标签分隔：
&amp;lt;div id=&amp;quot;toc&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div id=&amp;quot;content&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;Title goes her&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;Subtitle goes here&amp;lt;/h2&amp;gt; Text goes here... &amp;lt;/div&amp;gt;  JS部分
$(&amp;quot;#toc&amp;quot;).append(&#39;In this article:&#39;) $(&amp;quot;h1, h2, h3&amp;quot;).each(function(i) { var current = $(this); current.attr(&amp;quot;id&amp;quot;, &amp;quot;title&amp;quot; + i); $(&amp;quot;#toc&amp;quot;).append(&amp;quot;&amp;lt;a id=&#39;link&amp;quot; + i + &amp;quot;&#39; href=&amp;quot;#title%22%20+%0A%20%20%20%20%20%20%20%20i%20+%20%22&amp;quot; title=&#39;&amp;quot; + current.attr(&amp;quot;tagName&amp;quot;) + &amp;quot;&#39;&amp;gt;&amp;quot; + current.html() + &amp;quot;&amp;lt;/a&amp;gt;&amp;quot;); });  JS替换后的结果
&amp;lt;div id=&amp;quot;toc&amp;quot;&amp;gt; In this article: &amp;lt;a id=&amp;quot;link0&amp;quot; title=&amp;quot;H1&amp;quot; href=&amp;quot;#title0&amp;quot;&amp;gt;Article title&amp;lt;/a&amp;gt; &amp;lt;a id=&amp;quot;link1&amp;quot; title=&amp;quot;H2&amp;quot; href=&amp;quot;#title1&amp;quot;&amp;gt;Header Level 2&amp;lt;/a&amp;gt; &amp;lt;a id=&amp;quot;link2&amp;quot; title=&amp;quot;H3&amp;quot; href=&amp;quot;#title2&amp;quot;&amp;gt;Header Level 3&amp;lt;/a&amp;gt; &amp;lt;a id=&amp;quot;link3&amp;quot; title=&amp;quot;H3&amp;quot; href=&amp;quot;#title3&amp;quot;&amp;gt;Header level 3 again&amp;lt;/a&amp;gt; &amp;lt;a id=&amp;quot;link4&amp;quot; title=&amp;quot;H3&amp;quot; href=&amp;quot;#title4&amp;quot;&amp;gt;Header level 3 once again&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt;  </description>
    </item>
    
    <item>
      <title>通过ssh传输文件</title>
      <link>https://idc.wf/docs/transfer-files-through-ssh/</link>
      <pubDate>Sat, 14 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/transfer-files-through-ssh/</guid>
      <description>通过ssh传输文件 : scp -rp /path/filename username@remoteIP:/path  </description>
    </item>
    
    <item>
      <title>webqq中自适应宽度的JS代码和隐藏页面横向滚动条的css样式</title>
      <link>https://idc.wf/docs/webqq-js-code-in-the-adaptive-width/</link>
      <pubDate>Thu, 12 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/webqq-js-code-in-the-adaptive-width/</guid>
      <description>webqq 中 自适应宽度的JS代码
&amp;lt;script src=&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script src=&amp;quot;http://web.qstatic.com/jsapi/alloy.api.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; try { alloy.onReady(function(){ if($(window).width()&amp;lt;1026){ alloy.window.setBodySize({width: 1026,height: $(window).height()}) }; }); }catch(e){ } $(window).resize(function(){ var w = $(window).width(); var h = $(window).height(); $(&amp;quot;#iyaya_iframe&amp;quot;).css({ width: w&amp;gt;1026?w-16:1016, height: h, }); }); &amp;lt;/script&amp;gt;  隐藏横向滚动条的方法：
&amp;lt;span style=&amp;quot;color: #ff0000;&amp;quot;&amp;gt;给 html 设置 overflow-x: hidden&amp;lt;/span&amp;gt;   </description>
    </item>
    
    <item>
      <title>我家里的网络与几个服务器的连通状况</title>
      <link>https://idc.wf/docs/my-home-network-and-the-connectivity-of-several-servers/</link>
      <pubDate>Wed, 04 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/my-home-network-and-the-connectivity-of-several-servers/</guid>
      <description>这是从我家ping几台服务器结果的截图，悲剧啊，这TM的就是杯具。。。。
173.252.207.120
Ping:

Tracert:

206.221.220.4
Ping:

Tracert

216.108.229.6
Ping:

Tracert</description>
    </item>
    
    <item>
      <title>清除页面中多余的css样式</title>
      <link>https://idc.wf/docs/remove-the-extra-css-style-page/</link>
      <pubDate>Wed, 04 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/remove-the-extra-css-style-page/</guid>
      <description>一、Dust-Me selectors
Dust-Me是一个很有用也很好用的Firefox插件，它可以分析到你的页面中调用的所有css文件并分析那些在页面中没有被用到。
 支持本地和远程样式文件，包括使用&amp;lt;link&amp;gt;标签、&amp;lt;?xml-stylesheet?&amp;gt;处理指令、@import语句等方式引入的样式文件；(但是不支持页面中的&amp;lt;style&amp;gt;块和内联样式)
 支持IE条件注释中引入的样式文件；
 可以检查一个页面，也可以检查整个网站；
 支持css1选择器、大部分css2和css3选择器；
 理解通用的css hack，比如 “* html #fuck-ie”将会被认为是”html #fuck-ie”；
 支持Firefox 3.5和Firefox 3.0，事实上得益于FF 3.5的js引擎的改进，FF 3.5中的性能比FF 3.0要高50%。
  下载地址：https://addons.mozilla.org/en-us/firefox/addon/dust-me-selectors/
 二、Page Speed
Page Speed是Google提供的一个前端性能分析工具，有些类似于YSlow，但是提供了一些比较个性且很有用的工具，比如Remove unused css： Page Speed和YSlow一样依赖Firebug。
下载地址：http://code.google.com/intl/zh-CN/speed/page-speed/download.html
 另附解除firefox版本兼容性限制的插件：https://addons.mozilla.org/zh-cn/firefox/addon/add-on-compatibility-reporter/</description>
    </item>
    
    <item>
      <title>archlinux 的一些资料</title>
      <link>https://idc.wf/docs/archlinux-some-of-the-information/</link>
      <pubDate>Sat, 30 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/archlinux-some-of-the-information/</guid>
      <description>下载地址：http://mirrors.163.com/archlinux/iso/latest/
中文wiki：https://wiki.archlinux.org/index.php/Archlinux_%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#.E5.AE.89.E8.A3.85Arch_linux
一些其他朋友的blog
Archlinux 2010.05安装及基本配置
打造完美的 linux 桌面 — Arch linux 2007.08-2
嗯，下个archlinux学习一下linux吧</description>
    </item>
    
    <item>
      <title>php日志系统——plog</title>
      <link>https://idc.wf/docs/php-log-system-plog/</link>
      <pubDate>Thu, 28 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-log-system-plog/</guid>
      <description>我在使用的时候发现了一个问题，就是要想在不同的文件夹下面记录不同的状况，例如： 在/logs/debug/ 下面记录debug 的日志， 在/logs/error/ 下面记录error的日志 就需要分别建立filedebug.php 和 fileerror.php 作为写入的引擎，事实上这两个类在类内部的代码里面是完全一模一样的。 好吧，这不算什么致命的问题，重新集成一次file.php就可以了。 总的来说，这个日志系统还是不错的。 plog的介绍： 日志是一个应用程序的重要组成部分，今天在看pylons对日志的处理时，受到启发，于是plog就诞生了。 很多php框架都忽略了日志的重要性(如kohana)，往往只是能用，自定义和可扩展性不够，等到程序出了问题，再想找原因时就比较麻烦了。 plog简介
plog是一款轻量级，易定制，易使用，易扩展的php日志系统。可以很方便地添加日志处理工具、自定义输出格式、自定义日志类型等等。 plog使用
使用plog很简单，在每个要加日志的文件里，输入以下代码 debug(&amp;lsquo;this is debug message&amp;rsquo;); $log-&amp;gt;info(&amp;lsquo;this is info message&amp;rsquo;); plog的配置
plog的配置很灵活，下面是个demo config debug(&amp;lsquo;this is debug message&amp;rsquo;); $log-&amp;gt;info(&amp;lsquo;this is info message&amp;rsquo;); 几点说明
levels项，每一个值都是一个方法，不过是小写的，如$log→debug(‘message’)。如果某个方法不在这些levels里会触发异常。 日志格式的可选变量在plog/formatter.php里，每一个get开头的方法就是，如果觉得不够用，可以自己添加。 日志内容
日志内容取决于日志格式，下面是demo debug(&amp;lsquo;this is debug message&amp;rsquo;); $log-&amp;gt;info(&amp;lsquo;this is info message&amp;rsquo;); 下载
https://github.com/lzyy/plog &amp;ndash;EOF&amp;ndash;若无特别说明，本站文章均为原创，转载请保留链接，谢谢 来自：http://blog.leezhong.com/project/2010/12/06/plog.html</description>
    </item>
    
    <item>
      <title>推荐一个公共的评论系统disqus</title>
      <link>https://idc.wf/docs/recommended-a-public-comment-system-disqus/</link>
      <pubDate>Thu, 28 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/recommended-a-public-comment-system-disqus/</guid>
      <description>这是个很有意思的公共评论系统，使用他可以让用户使用不同的帐号登录并评论，比如说，twitter,facebook,google等，一部到位，不错！
网站：http://disqus.com/
效果参看本站</description>
    </item>
    
    <item>
      <title>twitter官方的同步到facebook的服务：http://apps.facebook.com/twitter/</title>
      <link>https://idc.wf/docs/synchronized-to-the-official-facebook-twitter-services-httpapps-facebook-comtwitter/</link>
      <pubDate>Wed, 27 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/synchronized-to-the-official-facebook-twitter-services-httpapps-facebook-comtwitter/</guid>
      <description>访问这个网站(需翻墙):http://apps.facebook.com/twitter/，按步骤来就可以了！</description>
    </item>
    
    <item>
      <title>共享google reader 内容到twitter,facebook</title>
      <link>https://idc.wf/docs/shared-google-reader-content-to-twitter-facebook/</link>
      <pubDate>Wed, 27 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/shared-google-reader-content-to-twitter-facebook/</guid>
      <description>今天听人说 googlereader2twitter,遂google之,得到以下答案:
1.Twitterfeed
打开这个网站,注册或直接用OpenID的方式登录(google,yahoo,openid,wordpress&amp;hellip;),按教程(3步)走,就可以了,支持同步greafer到Facebook,Twitter,Statusnet,Hellotxt.
googlereader rss 地址:http://www.google.com/reader/shared/hnzksq 把后面的hnzksq换成你的google ID 就可以了.
这个网站只支持从RSS地址导入数据,我自己刚添加成功,还没看到导入的效果
2.friendfeed
这个网站有中文界面,所以很简单&amp;hellip;
注册并登录这个网站,在设置里面添加你需要导入的数据源,然后在这个页面 选择发布到twitter ,ok</description>
    </item>
    
    <item>
      <title>Proxy Switchy! 可以打开https，打不开http的解决方法</title>
      <link>https://idc.wf/docs/proxy-switchy-can-open-the-https-not-open-http-solution/</link>
      <pubDate>Tue, 26 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/proxy-switchy-can-open-the-https-not-open-http-solution/</guid>
      <description>之前的我Proxy Switchy!代理规则开启的时候，只能打开https的页面，比如https://www.google.com，但是打不开http的页面，比如：http://www.google.com。
这让我很困惑！
后来查了一些资料，自己做了一些测试发现了！
因为我用的是ssh的方式proxy的，所以我应该使用 “SOCKS 代理” ，但是我之前选的是 “HTTP 代理”，而且选了 “对所有协议均使用相同的代理服务器”，这样一来，我访问页面的时候，https还好说，突破性本来就强，但是http就被阻隔到本地了，而我的ssh是不不会proxy的，所以唉。。。。
删掉其他的http,https,ftp代理服务器，只留一个“SOCKS 代理”就可以了，记得选 SOCKS v5 
留此文以做纪念！</description>
    </item>
    
    <item>
      <title>一个IE6的div 高度bug</title>
      <link>https://idc.wf/docs/bug-ie6-the-div-a-height-of/</link>
      <pubDate>Mon, 25 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/bug-ie6-the-div-a-height-of/</guid>
      <description>我也不想管IE6的，但是这里毕竟是中国，使用IE6的人还是很多地！
今天做项目的时候发现了一个IE6的bug
bug表现：
div 的height 明明设为1px了，但是在IE6下显示出来高度是10px。
解决方法：
加上样式:font-size:0;
至于为什么，我忘掉了。。。</description>
    </item>
    
    <item>
      <title>[转]世界史学界嘲笑中国歪曲历史，元清何曾是中国？</title>
      <link>https://idc.wf/docs/to-laugh-at-the-worlds-historians-distorted-the-history-of-china-the-chinese-yuan-and-qing-ever/</link>
      <pubDate>Sat, 23 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/to-laugh-at-the-worlds-historians-distorted-the-history-of-china-the-chinese-yuan-and-qing-ever/</guid>
      <description>&lt;p&gt;历史学家克罗齐曾经说过，一切的历史都是当代史。 他的意思是说，一切的历史学家，在编撰历史的时候，都会自觉不自觉的以今天的眼光，都会自觉不自觉的站在今天的现实去考虑历史的事件，以选择对今天有用的 东西.。.但并非是我们可以站在今天，就可以妄顾历史事实，以今天的利益为准绳，任意的取舍，甚至是恶意的歪曲事实，以迎合今天的政治需要。&lt;/p&gt;

&lt;p&gt;事实上，满清立国定满语为国语，也就是满语才 是大清国的官方语言，初叶至中叶乃至19世纪末的官方文件有相当一部分以满文（清字）书写，比如尼佈楚条约的正式条约 仅有满、俄、拉丁三种文本，而中国的汉文版本仅在刻制的界碑中使用（碑文共有满、蒙、汉、俄、拉丁五种文本）。19世纪以来才两者并用书写。直到今 天，EVEN,EVENKI（ 鄂温克语 ）,NANAI（赫 哲语）,NEGIDAL,OROCH,OROK,UDIHE(UDEGE),ULCH，这些通古斯语仍在被蒙古国和俄罗斯联邦的满人所使用,说满人被中国 同化实在是自欺欺人。而且恰恰相反的是，现在中国的国语(普通话) 就是当年满清通过武力手段强制推广的语言。章太炎就曾经批判过普通话，称其为“金鞑虏语”。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DIRECTORY_SEPARATOR常量与PATH_SEPARATOR常量</title>
      <link>https://idc.wf/docs/directory_separator-and-path_separator-constant-constant/</link>
      <pubDate>Mon, 18 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/directory_separator-and-path_separator-constant-constant/</guid>
      <description>DIRECTORY_SEPARATOR：路径分隔符，linux上就是’/’ windows上是’\’
PATH_SEPARATOR：include多个路径使用，在win下，当你要include多个路径的话，你要用”;”隔开，但在linux下就使用”:”隔开的。
这2个常量的使用能够避免不同平台的兼容性问题。
注意：
这两个常量并不是一直存在的，需要在编译的时候包含 Directory 库，或者在运行时被动态加载后才有效。
所以如果不敢确定这两个常量存在的话，可以用下面的语句：
if(!defined(&#39;DIRECTORY_SEPERATOR&#39;)){ if(strtoupper(substr(php_os, 0, 3)) === &#39;WIN&#39;) { define(&amp;quot;DIRECTORY_SEPERATOR&amp;quot;,&amp;quot;\&amp;quot;); } else { define(&amp;quot;DIRECTORY_SEPERATOR&amp;quot;,&amp;quot;/&amp;quot;); } }  </description>
    </item>
    
    <item>
      <title>原来mysql_insert_id()也不安全啊，不知道有没有其他方法可以用来得到插入的自增ID</title>
      <link>https://idc.wf/docs/original-mysql_insert_id-is-not-safe-ah-do-not-know-any-other-ways-to-get-into-the-self-by-id/</link>
      <pubDate>Fri, 15 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/original-mysql_insert_id-is-not-safe-ah-do-not-know-any-other-ways-to-get-into-the-self-by-id/</guid>
      <description>今天我负责的一个项目出了问题，插入数据之后调用mysql_insert_id()拿取插入的自增ID的时候一直返回0，试了一下在本地是可以拿到的，但是放到线上就不可以了。
无奈，只好插入完毕之后再通过插入的值来查询一遍得到insert_id。
后来发现，mysql_insert_id() 带上数据量连接ID之后成功率倒是上升了很多，但是高并发下还是有可能会出现得到mysql_insert_id()返回0的现象。
不知道有没有其他方法可以用来得到插入的自增ID。
记。。。</description>
    </item>
    
    <item>
      <title>Mysql 数据库引入 memcached，支持 Nosql</title>
      <link>https://idc.wf/docs/mysql-database-into-memcached-support-nosql/</link>
      <pubDate>Thu, 14 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/mysql-database-into-memcached-support-nosql/</guid>
      <description>mysql 也开始支持Nosql了，这样一来如果可以直接用sql语句进行检索查询的话无疑会把原先的Memcache等给排挤出去，如果效率方面又很高的话，那么memcache还活什么啊？
嗯。。。期待。。。
Oracle 前天在 2011 Mysql user conference and expo 大会上发布的 Mysql 5.6.2 测试版本，详情请看这里。
该版本最值得关注的便是对 Nosql 技术的支持，尽管目前还是实验阶段，该技术使得 Mysql 内置 Nosql 技术，该技术可减少 memcached 的查询延迟。在单台机器中，Nosql 当前只适用一张 InnoDB 表，但未来将支持多个表。在 memcached 中的 key和value 分别对应表中的相应字段，同时可为 key定义多列的值。所有这些数据都存储在一张 InnoDB 表，可通过 sql 命令来进行检索和修改。目前集成 memcached 守护进程的版本只能用于 linux。
来自 InnoDB 的博客向你介绍如何启用该功能
下图是该技术的架构图：
来自:http://news.cnblogs.com/n/97243/</description>
    </item>
    
    <item>
      <title>搜索引擎配置优化笔记 - 老板的讲课</title>
      <link>https://idc.wf/docs/search-engine-configuration-optimization-notes-the-bosss-lecture/</link>
      <pubDate>Thu, 14 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/search-engine-configuration-optimization-notes-the-bosss-lecture/</guid>
      <description>搜索引擎优化 并不是 只seo 而是只自建搜索引擎的配置优化
使用了两个开源的软件：sphinx 和 redis
开源搜索引擎
1.Lucence/Nutch/Solr Java编写
2.Sphinx/Coreseek C++
3.Xapian 豆瓣
4.BosS
Sphinx 介绍
1.配置索引文件
2.索引 （正向索引 -&amp;gt; like %key% ; 反向索引 -&amp;gt; 先建关键词列表）
3.处理搜索
4.2-3不断重复
 Sphinx 特点
索引快，支持中文，丰富的查询表达式，可以分段落，支持模糊查询，多种结果后处理机制
排序，BM25，搜索算法
支持实时索引，地理位置搜索
 Redis 介绍
Nosql 数据库， 数据常驻内存， 实时异步存储到数据库
 Redis 特点
数据不会丢失，查询速度快
 流程
论坛 -&amp;gt; 索引服务器 -&amp;gt; 处理文档 去特殊字符-&amp;gt; 存储到Redis ,获得ID -&amp;gt; 索引服务器Sphinx
 中文分词
Sphinx 汉字自动单词分词 一元分词法
查询时用“”取消分词，对汉字进行词语分组
最多分词法，一元分词法（最灵活）
中文分词法 httpcus 张宴
分词中学习，检查某几个字合在一起得到的结果多少
同义词表</description>
    </item>
    
    <item>
      <title>记mysql读写分离</title>
      <link>https://idc.wf/docs/separation-of-mind-to-read-and-write-mysql/</link>
      <pubDate>Thu, 14 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/separation-of-mind-to-read-and-write-mysql/</guid>
      <description>我们公司的网站做项目使用的是自己封装的Mysql查询函数（注意，是函数，不是过程），没有使用框架，使用的模板也是老板自己写的，所以做读写分离是件比较麻烦的事情。
一般来说，读写分离有2中方法：
 1.代码端 在代码段数据库访问部分进行修改，这点如果项目本身采用框架，或者封装了访问过程，又保证没有直接通过mysql_query()函数来进行查询的话是很简单的一个方法，很多框架默认都是直接读写分离的，只要稍微修改一下配置文件即可。 但这样做有几个缺点： - 1.如果数据库服务器做分布式，比如说有2台进行写操作，2台进行读操作，那么读写数据库时的权重是个很麻烦的问题。 - 2.如果需要添加数据库服务器，那么需要修改配置文件和权重分配，又是一个麻烦的事情。 - 3.一旦其中一台数据库挂掉，单纯的改配置显然是应付不了的。 2.数据库访问代理 就是说在数据库和网络之间增加一层访问代理。这层代理是透明的，外界几乎看不出来区别，所以对于程序员来说，几乎不需要做任何事，只要把端口改成代理的端口就可以了，代码什么的，原封不动。 - 而且代理服务器的另一个好处是，权重和负载均衡，就算有一台服务器挂掉了，也不影响数据库访问。 - 另一个优点是，代理支持水平垂直分表分库，只要做好相应的规则，那么外界访问的时候就不需要管数据库的分表问题。比如说，我要查询用户的信息，只需要select * from user where user_id = ?,不需要再先计算用户属于哪个库那个表之类的，方便啊～，但是要做到这个，就需要对以前的代码做大范围的修改，所以这步我们暂且不做。  两个比较有名的开源数据库代理软件：
1.Amoeba_proxy
2.Mysql_proxy
我们用的是第一个，具体原因嘛，很简单，mysql_proxy 已经好几年没维护了。。。</description>
    </item>
    
    <item>
      <title>关于神的解释，我觉得这个说的挺好</title>
      <link>https://idc.wf/docs/interpretation-of-god-i-think-thats-very-good/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/interpretation-of-god-i-think-thats-very-good/</guid>
      <description>▆ 神．通達宇宙自然現象 . 九九年，建國五十年，我來參加這個慶典，國家宗教局來接待我的，那時局長葉小文先生，他請我吃飯，就談起來，他說我們共產黨是無神論的，我聽了之後，我說：局長，神那個字是什麼意思啊？他說什麼意思？ . 我說：神，用篆字寫的時候就很清楚了，篆字左面是個示，上面兩橫，兩橫上面一橫短，下面一橫長，那個古時候這個字叫上字，上下的上，這上天啊，下面三條，三條表示平麼？上天垂象，用現在的話來講是：自然現象，那一樣不是自然現象，人生也是自然現象。 . 這邊是什麼，這邊是個申，用篆字寫出來是三個開口由一條線貫通，這個意思就很明顯，你通達宇宙自然現象的，那這個人就叫做神，他說，是這個意思啊，我說，是啊，如果說是無神論的時候，那就肯定世間沒有一個人能夠了解宇宙自然的真相，那人不就變成愚人愚痴了嗎？他說，那我們以後就不能再講無神論了，我說，對了，沒錯。 . 所以你要懂得這個字是什麼意思啊，神這個字的意思就是通達宇宙這個自然的真相，我們佛法裡面講的是諸法實相，就是宇宙人生的真像，你能夠通達明了，這個人就稱為神人。 . 聖跟神是一個意思，聖是明了，明了宇宙人生真相的人，稱為聖。</description>
    </item>
    
    <item>
      <title>Xmarks – 浏览器收藏夹同步工具 (支持IE9、chrome、Firefox、IESafari)</title>
      <link>https://idc.wf/docs/xmarks-browser-favorites-sync-tools-support-ie9-chrome-firefox-iesafari/</link>
      <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/xmarks-browser-favorites-sync-tools-support-ie9-chrome-firefox-iesafari/</guid>
      <description>Xmarks 一款支持实现跨平台 (Windows，linux，mac) 同步书签、密码、打开网页等信息的软件，Xmarks 支持将 IE (Internet Explorer 9）、Firefox 火狐、chrome、Safari 浏览器 的收藏夹同步到 Xmarks 的服务器上，这样您就可以随时随地在任何一台电脑上访问书签中的网页了。 Xmarks使用： 到 Xmarks官方 下载你浏览器对应的版本，例如：Internet Explorer 9 ， 使用 Xmarks，你首先需要创建一个 Xmarks 帐号，之后它马上会将你的书签同步到服务器上。以后当你的书签有增加会减少时，Xmarks 会根据你设定的规则进行同步，自动同步或关闭浏览器时同步。
Xmarks下载： Xmarks官方：http://www.xmarks.com/
Xmarks版本：支持IE、chrome、Firefox、IESafari</description>
    </item>
    
    <item>
      <title>修改ssh登录的提示信息</title>
      <link>https://idc.wf/docs/modify-the-ssh-login-message/</link>
      <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/modify-the-ssh-login-message/</guid>
      <description>vi /etc/motd</description>
    </item>
    
    <item>
      <title>修改SSH登录密码</title>
      <link>https://idc.wf/docs/modify-the-ssh-password/</link>
      <pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/modify-the-ssh-password/</guid>
      <description>SSH登录时要求输入的其实是系统的用户与密码，所以如果要修改ssh登录密码的话，只要更改系统用户的密码就可以了。命令如下：
passwd root #root就是你要修改密码的用户名,键入命令之后就会要求你修改这个用户的密码，键入两次就OK了。
 </description>
    </item>
    
    <item>
      <title>用UnixBench测试是遨游VPS结果</title>
      <link>https://idc.wf/docs/vps-travel-with-unixbench-test-results/</link>
      <pubDate>Sat, 19 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/vps-travel-with-unixbench-test-results/</guid>
      <description>&lt;p&gt;   #    #  #    #  #  #    #          #####   ######  #    #   ####   #    #   &lt;br&gt;   #    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #    &lt;br&gt;   #    #  # #  #  #    ##            #####   #####   # #  #  #       ######    &lt;br&gt;   #    #  #  # #  #    ##            #    #  #       #  # #  #       #    #    &lt;br&gt;   #    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #    &lt;br&gt;    ####   #    #  #  #    #          #####   ######  #    #   ####   #    #&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用刚买的VPS主机做了一个镜像站</title>
      <link>https://idc.wf/docs/vps-hosting-to-do-with-just-bought-a-mirror/</link>
      <pubDate>Sat, 19 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/vps-hosting-to-do-with-just-bought-a-mirror/</guid>
      <description>前天在 vpsyou 买了一个虚拟主机VPS，但是因为在家里的连接速度不佳被我退了，昨天又买了遨游的虚拟主机，速度还可以。 以下是安装过程：
1.首先，交钱，拿到自己的VPS的IP
2.用拿到的账户名+密码使用SSH登录VPS
3.到http://lnmp.org/install.html按教程安装lnmp，也就是linux,nginx,mysql,php,标准的建站套装
4.安装完毕，就可以通过访问你的IP地址来查看效果了，如果能看到成功页面，那恭喜你
5.在http://www.dot.tk/zh/index.html申请一个免费域名，然后 使用Dot TK的免费DNS服务器 绑定A记录的IP地址到你的VPS IP,等域名生效，就可以通过域名来进行访问了。
6.打包之前的站，用wget下载到VPS，解压放到wwwroot目录，导入mysql数据
完成安装
示例：http://zh-x.tk/
探针：http://zh-x.tk/tools/p.php
ps:格式明天有空再搞，好困，4点了。</description>
    </item>
    
    <item>
      <title>Google Buzz实时同步Twitter的方法</title>
      <link>https://idc.wf/docs/google-buzz-real-time-synchronization-method-of-twitter/</link>
      <pubDate>Sat, 12 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/google-buzz-real-time-synchronization-method-of-twitter/</guid>
      <description> 相比Twitter而说，Buzz目前还可以从国内访问，因此昨天我那篇文章的后面就有人咨询，是否能实现Buzz的微博同步到Twitter上，经过我的研究发现，这是可以实现的，而且同步几乎是实时的。
这主要归功于PubSubHubBub，可以实现RSS Feed的实时更新，而Google Buzz的RSS Feed和Google Reader一样，从一开始就支持PubSubHubBub，这使得Buzz的Feed变成实时的Feed，而恰好Google的另一个产品FeedBurner也支持PubSubHubBub的Feed，因此就可以通过这个来实现微博的实时同步。
具体同步Google Buzz到Twitter的方法是：在个人Profile页面找到自己Buzz的Feed，通常使用IE或Firefox进入 https://www.google.com/profiles/me 后，会看到地址栏的RSS图标，点击后可看见RSS地址，这个地址格式类似：http://buzz.googleapis.com/feeds/112646999948608559077/public/posted 。
登录FeedBurner，将上述Feed烧录，然后在Publicize里面，点Socialize，加入自己的Twitter帐号，格式选项中，选Body Only，不加Link，不留retweets空间，保存后就可以实现同步。设置界面如下图所示：
同步的内容只有140个字，虽然Buzz是不限制字数的，但如果你想把Buzz当作微博客同步Twitter，那么还是将字数限制在140个字好一些。注意同步Twitter后，就不要再Buzz中再连接Twitter了，否则就搞成死循环了。
经过我的测试，使用FeedBurner将Google Buzz的Feed发布到Twitter，消息同步时间在一分钟内，基本是实时的，如果你想以Buzz为自己主要的微博客，那么就可以采用这种方法同步信息到Twitter，简单而快速。
从技术的角度我很喜欢Google Buzz，因为它支持PubSubHubBub，可以聚合其他网站内容（连新浪微博都支持同步博客信息），这些东西Twitter至今也不支持。有了实时的RSS，信息的快速传递就可以不依赖于某个平台（如Twitter），这大概就是Twitter至今也不想支持PubSubHubBub的原因吧。
  
除非注明，月光博客文章均为原创，转载请以链接形式标明本文地址
本文地址：http://www.williamlong.info/archives/2086.html
 </description>
    </item>
    
    <item>
      <title>太神奇了，原来URL锚点...</title>
      <link>https://idc.wf/docs/tai-shen-qi-le-yuan-lai-url-mao-dian/</link>
      <pubDate>Wed, 09 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/tai-shen-qi-le-yuan-lai-url-mao-dian/</guid>
      <description>太神奇了，原来URL锚点还能做成这样，学习了～http://probablyinteractive.com/url-hunter</description>
    </item>
    
    <item>
      <title>IE中出现 &#34;Stack overflow at line&#34; 错误的解决方法</title>
      <link>https://idc.wf/docs/ie-there-stack-overflow-at-line-wrong-solution/</link>
      <pubDate>Fri, 25 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ie-there-stack-overflow-at-line-wrong-solution/</guid>
      <description>出现该错误提示，主要有两种原因：
 使用系统的事件名称作为自定义函数名如：  onclick / onsubmit &amp;hellip; 都是系统保留的事件名称，不允许作为重定义函数名称。
 出现死循环 ：  如：在图片对象定义了 onerror 事件的循环处理、
这里并不是说 1.gif 不存在， 可能是由于网络阻塞原因造成， 这时会执行 onerror 事件,
调用 /images/default.gif 去做当前图片的路径， 但如果当前 /image/default.gif 这个图片文件不存在，
再或者由于网络原因， 下载&amp;rsquo;/image/default.gif&amp;rsquo; 又出现错误， 这就出现了死循环。
通过IE中出现 &amp;ldquo;Stack overflow at line&amp;rdquo; 错误的解决方法 - 小生学艺 - JavaEye技术网站.</description>
    </item>
    
    <item>
      <title>winetricks - wine上一个安装Windows有关库和软件的小程序</title>
      <link>https://idc.wf/docs/winetricks-wine-on-a-database-and-software-to-install-windows-on-a-small-program/</link>
      <pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/winetricks-wine-on-a-database-and-software-to-install-windows-on-a-small-program/</guid>
      <description>首先
sudo apt-get install winetricks
安装winetricks 之后，就可以让wine自动去安装一些windows上面常用的软件了。
详细列表参见：http://wiki.winehq.org/winetricks_cn</description>
    </item>
    
    <item>
      <title>被冤枉的file_exists</title>
      <link>https://idc.wf/docs/being-wronged-file_exists/</link>
      <pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/being-wronged-file_exists/</guid>
      <description>我在做项目的时候需要把图片进行压缩，当然进行压缩之前要先检查一下原图在不在，压缩完后也要检查一下新图有没有被压缩出来，但是我使用 file_exists 进行检查的时候却一直给我false。 代码如下： if (file_exists($desimage)) { $ok_num += 1; } else { $fail_num += 1; }  仔细检查了一下才发现，我拿到的图片url中包含 汉字 ，例如：if (file_exists($desimage)) { $ok_num += 1; } else { $fail_num += 1; }  而这些汉字在拿到的时候都会转变成 已编码的 URL 字符串，如：if (file_exists($desimage)) { $ok_num += 1; } else { $fail_num += 1; }  那么很明显我通过 已编码的 URL 字符串 去到服务器中找这个文件是肯定找不到的。唉，郁闷了。。解决方法很简单:if (file_exists($desimage)) { $ok_num += 1; } else { $fail_num += 1; }  记下以示警示！</description>
    </item>
    
    <item>
      <title>Ubuntu下使用svn</title>
      <link>https://idc.wf/docs/ubuntu-using-svn/</link>
      <pubDate>Wed, 23 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-using-svn/</guid>
      <description>svn作为日常开发中不可缺少的工具，今天终于开始在Ubuntu下使用了。
1、首先需要安装svn。Ubuntu下的svn安装十分简单，sudo apt-get install subversion，然后根据提示一步一步，就完成了svn的安装；
2、检出文件（checkout）。
使用命令：svn co http://{svn repository url} /destination
然后系统会用当前的用户名登录，提示输入密码，如果第一次密码输入错误，会提示你输入用户名；
输入正确后，就可以检出文件了。
3、提交文件（commit）。
进入需要更新的目录，输入命令：
svn commit -m path-to-commit，其中path-to-commit可以为空，成功后会提示更新后的版本号。
4、更新文件（update）。
svn update，在要更新的目录运行这个命令就可以了。
5、查看日志（log）。
svn log path
6、为Eclipse配置svn。
http://subclipse.tigris.org/files/documents/906/38385/site-1.2.3.zip，可以从 这个地址下载Eclipse的插件，拷贝到plugins目录中以后，重启Eclipse就可以打开svn的视图了。
也可以通过官方的 安装页面来进行在线安装：http://subclipse.tigris.org/install.html</description>
    </item>
    
    <item>
      <title>Ubuntu下修改hosts文件</title>
      <link>https://idc.wf/docs/modify-the-hosts-file-under-ubuntu/</link>
      <pubDate>Wed, 23 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/modify-the-hosts-file-under-ubuntu/</guid>
      <description>在windows系统中,IIS建立站点后经常需要通过hosts指向地址 在ubuntu下,修改hosts文件用方法 #sudo gedit /etc/hosts 编辑保存即可  </description>
    </item>
    
    <item>
      <title>原来买个馒头都有高达17%的“馒头税”</title>
      <link>https://idc.wf/docs/have-had-to-buy-bread-as-much-as-17-of-the-bread-tax/</link>
      <pubDate>Mon, 21 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/have-had-to-buy-bread-as-much-as-17-of-the-bread-tax/</guid>
      <description>山东商报济南消息 如果不是政协委员潘耀民的一份提案，包括很多记者在内都还不知道馒头税，而且馒头税的税率高达17%。潘耀民委员认为，17%的馒头税设置税率过高，既不科学，还增加百姓消费的负担，更不利于食品安全。 现在老百姓对超市的馒头价格有很大抱怨，一个大馒头就得在1.2元。但馒头税的税率却高达17%，这意味着老百姓买馒头的每1元就有近2毛的税。 据了解，潘耀民是济南民天面粉有限责任公司的副总经理，在省城馒头生产的企业中，像民天这种既有各种认证及食品安全认证的公司，都征收17%。 “馒头不是海参，不吃海参可以，但不吃馒头很难。”潘耀民委员说，为了减轻百姓的生活压力，政府多部门联手多渠道千方百计平抑物价，那么降低馒头税率无疑是最科学、最直接、最有效的办法。 原文:http://dongde.in/2011/02/mantou/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=mantou</description>
    </item>
    
    <item>
      <title>Notepad&#43;&#43;去除代码行号的几种方法</title>
      <link>https://idc.wf/docs/notepad-to-remove-the-code-line-number-of-the-several-methods/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/notepad-to-remove-the-code-line-number-of-the-several-methods/</guid>
      <description>&lt;p&gt;&lt;strong&gt;问：&lt;/strong&gt;在网页中复制代码时，常常遇到高亮程序自动给代码加上行号或字符“#”，如何格式化？如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#1 //去除首字符或行号
#2 &amp;amp; lt; ? php#100 echo &#39;再长点&#39;;#............#2010 echo &#39;无语了吧&#39;;#2012 ? &amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jQuery.live()与Event Delegation</title>
      <link>https://idc.wf/docs/jquery-live-and-event-delegation/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/jquery-live-and-event-delegation/</guid>
      <description>&lt;p&gt;网友Ark刚好问到live()，不知道大家有没有觉得jQuery. live()具有为&amp;rdquo;未来元素&amp;rdquo;设定事件的未卜先知能力很神奇?至少在乍听之余，我觉得很不可思议，莫非它要拦截所有建立元素的过程? 不对，难度很高、没效率、漏洞也很多，那么又是怎么做到的呢?  本草網目官方文件上有詳細的解釋，關鍵在Event Delegation 。 本草网目官方文件上有详细的解释，关键在Event Delegation 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php bmp格式图片转换成jpg格式程序</title>
      <link>https://idc.wf/docs/php-bmp-format-image-into-jpg-format-program/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-bmp-format-image-into-jpg-format-program/</guid>
      <description>&amp;lt;?php /* * To change this template, choose Tools | Templates * and open the template in the editor. */ //php教程将bmp格式图片转换成jpg格式程序 function imagebmp($img,$file=&amp;quot;&amp;quot;,$rle=0) { $colorcount=imagecolorstotal($img); $transparent=imagecolortransparent($img); $istransparent=$transparent!=-1; if($istransparent) $colorcount--; if($colorcount==0) { $colorcount=0; $bitcount=24; }; if(($colorcount&amp;gt;0)and($colorcount&amp;lt;=2)) { $colorcount=2; $bitcount=1; }; if(($colorcount&amp;gt;2)and($colorcount&amp;lt;=16)) { $colorcount=16; $bitcount=4; }; if(($colorcount&amp;gt;16)and($colorcount&amp;lt;=256)) { $colorcount=0; $bitcount=8; }; $width=imagesx($img); $height=imagesy($img); $zbytek=(4-($width/(8/$bitcount))%4)%4; if($bitcount&amp;lt;24) $palsize=pow(2,$bitcount)*4; $size=(floor($width/(8/$bitcount))+$zbytek)*$height+54; $size+=$palsize; $offset=54+$palsize; // bitmap file header $ret = &#39;bm&#39;; // header (2b) $ret .= int_to_dword($size); // size of file (4b) $ret .</description>
    </item>
    
    <item>
      <title>php 断点续传功能</title>
      <link>https://idc.wf/docs/http-functions-php/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/http-functions-php/</guid>
      <description>断点续传指的是在上传时，将上传任务（一个文件或一个压缩包）人为的划分为几个部分，每一个部分采用一个线程进行上传，下面我们来看看php 断点续传功能的实现方法吧。
&amp;lt;?php /** * 作者 于恩水&amp;lt;yuenshui@126.com&amp;gt; * 支持断点续传下载 * 实例代码： * $down = new SD_DownLoad(); * $down-&amp;gt;Down(&#39;E:/iso/MS.Office2003SP1.CHS.iso&#39;); **/ SD_DownLoad { /** * 下载的开始点 * * @access private * @var integer */ private $mDownStart; /** * 文件大小 * * @access private * @var integer */ private $mFileSize; /** * 文件句柄 * * @access private * @var integer */ private $mFileHandle; /** * 文件全路径 * * @access private * @var string */ private $mFilePath; /** * 文件下载时显示的文件名 * * @access private * @var string */ private $mFileName; /** * 构造函数 * * @access public * @return void **/ public function __construct() { } /** * 下载 * * @param string $pFilePath 文件全路径 * @param string pFileName 文件下载时显示的文件名，缺省为实际文件名 * @access public * @return void **/ public function Down($pFilePath, $pFileName = &#39;&#39;) { $this-&amp;gt;mFilePath = $pFilePath; if(!</description>
    </item>
    
    <item>
      <title>php 超大文件下载类 支持2g以上文件 支持断点续传</title>
      <link>https://idc.wf/docs/php-file-download-large-file-support-class-supports-http-over-2g/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-file-download-large-file-support-class-supports-http-over-2g/</guid>
      <description>&amp;lt;?php ** * &amp;lt;SPAN class=t_tag onclick=tagshow(event) href=&amp;quot;tag.php?name=%CE%C4%BC%FE&amp;quot;&amp;gt;文件&amp;lt;/SPAN&amp;gt;传输，支持断点续传。 * 2g以上超大文件也有效 * @author MoXie */ class Transfer { ** * 缓冲单元 */ const BUFF_SIZE = 5120; / 1024 * 5 ** * 文件地址 * @var &amp;lt;String&amp;gt; */ private $filePath; ** * 文件大小 * @var &amp;lt;String&amp;gt; php超大数字 &amp;lt;SPAN class=t_tag onclick=tagshow(event) href=&amp;quot;tag.php?name=%D7%D6%B7%FB&amp;quot;&amp;gt;字符&amp;lt;/SPAN&amp;gt;串形式描述 */ private $fileSize; ** * 文件类型 * @var &amp;lt;String&amp;gt; */ private $mimeType; ** * 请求区域（范围） * @var &amp;lt;String&amp;gt; */ private $range; ** * 是否写入日志 * @var &amp;lt;Boolean&amp;gt; */ private $isLog = false; ** * * @param &amp;lt;String&amp;gt; $filePath 文件路径 * @param &amp;lt;String&amp;gt; $mimeType 文件类型 * @param &amp;lt;String&amp;gt; $range 请求区域（范围） */ function __construct($filePath, $mimeType = null , $range = null) { $this-&amp;gt;filePath = $filePath; $this-&amp;gt;fileSize = sprintf(&#39;%u&#39;,filesize($filePath)); $this-&amp;gt;mimeType = ($mimeType !</description>
    </item>
    
    <item>
      <title>公积金22问，你懂它吗？</title>
      <link>https://idc.wf/docs/fund-22-asked-you-know-it/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/fund-22-asked-you-know-it/</guid>
      <description>&lt;p&gt;&lt;strong&gt;第1问：住房公积金有什么用处？&lt;/strong&gt;  &lt;strong&gt;什么是住房公积金？&lt;/strong&gt;  住房公积金，是用人单位为了保障员工住房问题，每个月按照员工的工资比例，付出一部分钱，单独存到该员工的独立账户（专门用来缴纳公积金的账户），员工也从工资里扣除同等的钱，一并存到这个账户。  但是，公积金账户虽然是自己的，却并不像我们日常用的个人银行账户一样，能够随时的存取。它是按月缴存，并只有当个人要买房、租房或装修时，且能够提供出相应的证明材料（例如：购房合同…）后，方可申请提取出来。否则，就要等到退休后一次性全部取出。  &lt;strong&gt;住房公积金有什么用处？&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>几个比较好的免费资源</title>
      <link>https://idc.wf/docs/a-few-good-free-resources/</link>
      <pubDate>Fri, 18 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/a-few-good-free-resources/</guid>
      <description>2010年最新的100个免费HTML模板 108个漂亮而简约的免费图标 15个最佳jQuery幻灯插件和教程 国外30多个设计精良的电子商务网站 20个高质量的免费css模板 9款有用的javascript代码高亮脚本 10款有趣的免费字体 </description>
    </item>
    
    <item>
      <title>php模板引擎smarty缓存应用</title>
      <link>https://idc.wf/docs/php-smarty-caching-application-template-engine/</link>
      <pubDate>Thu, 17 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-smarty-caching-application-template-engine/</guid>
      <description>&lt;p&gt;1：smarty 缓存的配置  php代码&lt;a href=&#34;http://writeblog.csdn.net/#&#34;&gt;&lt;/a&gt;  2:smarty缓存的使用和清除  php代码&lt;a href=&#34;http://writeblog.csdn.net/#&#34;&gt;&lt;/a&gt;  &lt;div&gt;&lt;/p&gt;

&lt;p&gt;$&lt;span style=&#34;color: #800000&#34;&gt;smarty-&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #800000&#34;&gt;display&lt;/span&gt;(&amp;rsquo;&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color: #800000&#34;&gt;tpl&lt;/span&gt;&amp;rsquo;, &lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;&lt;em&gt;&lt;span style=&#34;color: #800000&#34;&gt;id&lt;/span&gt;);  //&lt;span style=&#34;color: #800000&#34;&gt;创建带ID的缓存&lt;/span&gt;,&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color: #800000&#34;&gt;tpl&lt;/span&gt;  &lt;span style=&#34;color: #800000&#34;&gt;模板文件&lt;/span&gt;
$&lt;span style=&#34;color: #800000&#34;&gt;smarty-&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #800000&#34;&gt;clear&lt;/span&gt;&lt;/em&gt;&lt;span style=&#34;color: #800000&#34;&gt;all&lt;/span&gt;&lt;em&gt;&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;(); //&lt;span style=&#34;color: #800000&#34;&gt;清除所有缓存&lt;/span&gt;
$&lt;span style=&#34;color: #800000&#34;&gt;smarty-&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #800000&#34;&gt;clear&lt;/span&gt;&lt;/em&gt;&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;(&amp;rsquo;&lt;span style=&#34;color: #800000&#34;&gt;index&lt;/span&gt;.&lt;span style=&#34;color: #800000&#34;&gt;htm&lt;/span&gt;&amp;rsquo;); //&lt;span style=&#34;color: #800000&#34;&gt;清除index&lt;/span&gt;.&lt;span style=&#34;color: #800000&#34;&gt;tpl的缓存&lt;/span&gt;
$&lt;span style=&#34;color: #800000&#34;&gt;smarty-&lt;/span&gt;&amp;gt;&lt;span style=&#34;color: #800000&#34;&gt;clear&lt;/span&gt;&lt;em&gt;&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;(&amp;rsquo;&lt;span style=&#34;color: #800000&#34;&gt;index&lt;/span&gt;.&lt;span style=&#34;color: #800000&#34;&gt;htm&lt;/span&gt;&amp;rsquo;,&lt;span style=&#34;color: #800000&#34;&gt;cache&lt;/span&gt;&lt;/em&gt;&lt;span style=&#34;color: #800000&#34;&gt;id&lt;/span&gt;); //&lt;span style=&#34;color: #800000&#34;&gt;清除指定id的缓存&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php,smarty 缓存操作</title>
      <link>https://idc.wf/docs/php-smarty-cache-operation/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-smarty-cache-operation/</guid>
      <description>&lt;p&gt;一、使用缓存   &lt;br&gt;要开启smarty的缓存,只需将caching设为true,并指定cache_dir即可.    &lt;br&gt;使用cache_lefetime指定缓存生存时间,单位为秒    &lt;br&gt;要对相同页面生成多个不同的缓存,在display或fetch中加入第二参数cache_id,如$smarty-&amp;gt;display(&amp;lsquo;index.tpl&amp;rsquo;,$my_cache_id);此特性可用于对不同的$_GET进行不同的缓存    &lt;br&gt;二、清除缓存  clear_all_cache();//清除所有缓存   &lt;br&gt;clear_cache(&amp;lsquo;index.tpl&amp;rsquo;);//清除index.tpl的缓存    &lt;br&gt;clear_cache(&amp;lsquo;index.tpl&amp;rsquo;,cache_id);//清除指定id的缓存  三、使用自定义缓存方式  设置cache_handler_func使用自定义的函数处理缓存   &lt;br&gt;如:    &lt;br&gt;$smarty-&amp;gt;cache_handler_func = &amp;ldquo;myCache&amp;rdquo;;    &lt;br&gt;function myCache($action, &amp;amp;$smarty_obj, &amp;amp;$cache_content, $tpl_file=null, $cache_id=null, $compile_id=null){    &lt;br&gt;}    &lt;br&gt;该函数的一般是根椐$action来判断缓存当前操作:    &lt;br&gt;switch($action){    &lt;br&gt;case &amp;ldquo;read&amp;rdquo;://读取缓存内容    &lt;br&gt;case &amp;ldquo;write&amp;rdquo;://写入缓存    &lt;br&gt;case &amp;ldquo;clear&amp;rdquo;://清空    &lt;br&gt;}    &lt;br&gt;一般使用md5($tpl_file.$cache_id.$compile_id)作为唯一的cache_id    &lt;br&gt;如果需要,可使用gzcompress和gzuncompress来压缩和解压&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何判断一个网站是否被墙</title>
      <link>https://idc.wf/docs/how-to-determine-whether-a-site-is-the-wall/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/how-to-determine-whether-a-site-is-the-wall/</guid>
      <description>&lt;p&gt;大家都知道GFW 平日作恶多端，一旦有网站不能访问，很多人都把矛头直指它了…. 虽然一般都是它干的，但实际上也不排除一些人别有用心…. 那么下面就来简单判断一下吧…  方法是用windows的tracert（&lt;strong&gt;打开命令提示符，输入tracert 域名&lt;/strong&gt;）命令追踪路由，也可以直接用&lt;a href=&#34;http://tool.chinaz.com/Tracert/&#34;&gt;http://tool.chinaz.com/Tracert/&lt;/a&gt;， 这个能显示ip所在地理位置，比windows自带的好。一般来说，无论是被GFW屏蔽的还是网站封IP的，我们总是能查到这个网站的IP地址，比如 Facebook，因为域名指向的ip是域名注册机构的dns服务器保留的，一般不会被封，所以，使用tracert命令就可以追踪路由了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跨浏览器实现float:center</title>
      <link>https://idc.wf/docs/to-achieve-cross-browser-float-center/</link>
      <pubDate>Wed, 16 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/to-achieve-cross-browser-float-center/</guid>
      <description>&lt;p&gt;我们都知道float:left和float:right，但是否想过float:center呢？居中浮动。。。  &lt;div&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;&amp;lt;span style=&amp;quot;color: #8b0000&amp;quot;&amp;gt;macji&amp;lt;/span&amp;gt;&amp;quot;&amp;gt;
    &amp;lt;ul &amp;lt;span style=&amp;quot;color: #0000ff&amp;quot;&amp;gt;class&amp;lt;/span&amp;gt;=&amp;quot;&amp;lt;span style=&amp;quot;color: #8b0000&amp;quot;&amp;gt;macji-skin&amp;lt;/span&amp;gt;&amp;quot;&amp;gt;
        &amp;lt;li&amp;gt;列表一&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;列表二&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;列表三&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;我们希望实现li是浮动的，并且居中的（li个数不固定，ul宽度未知）。可以设置ul的text-align:center,再设置li的display，可以实现居中，但这样不是我们的初衷，我们需要实现float:center。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTPS的七个误解</title>
      <link>https://idc.wf/docs/seven-misconceptions-https/</link>
      <pubDate>Tue, 15 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/seven-misconceptions-https/</guid>
      <description>&lt;p&gt;&lt;strong&gt;HTTPS的七个误解&lt;/strong&gt;  原文网址：&lt;a href=&#34;http://blog.httpwatch.com/2011/01/28/top-7-myths-about-https/&#34;&gt;http://blog.httpwatch.com/2011/01/28/top-7-myths-about-https/&lt;/a&gt;  译者：阮一峰  &lt;img src=&#34;http://image.beekka.com/blog/201102/bg2011021311.jpg&#34;&gt;  &lt;strong&gt;误解七：HTTPS无法缓存&lt;/strong&gt;  许多人以为，出于安全考虑，浏览器不会在本地保存HTTPS缓存。实际上，只要在HTTP头中使用特定命令，HTTPS是可以缓存的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php列出目录下的所有文件</title>
      <link>https://idc.wf/docs/php-directory-listing-all-the-files/</link>
      <pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-directory-listing-all-the-files/</guid>
      <description>function myDir($dir = __file__) { // 定于需要列出的目录地址 //$dir = dirname(__file__); // 用 opendir() 打开目录，失败则中止程序 $handle = @opendir($dir) or die(&amp;quot;Cannot open &amp;quot; . $dir); echo &amp;quot;&amp;lt;b&amp;gt;Files in &amp;quot; . $dir . &amp;quot;:&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;quot;; // 用 readdir 读出文件列表 while ($file = readdir($handle)) { // 将 &amp;quot;.&amp;quot; 及 &amp;quot;..&amp;quot; 排除不显示 if ($file != &amp;quot;.&amp;quot; &amp;amp;&amp;amp; $file != &amp;quot;..&amp;quot;) { echo &amp;quot;$file&amp;lt;br&amp;gt;&amp;quot;; } } // 关闭目录读取 closedir($handle); }  </description>
    </item>
    
    <item>
      <title>世界上最神奇的数字是...</title>
      <link>https://idc.wf/docs/shi-jie-shang-zui-shen-qi-de-shu-zi-shi/</link>
      <pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/shi-jie-shang-zui-shen-qi-de-shu-zi-shi/</guid>
      <description>世界上最神奇的数字是： 142857 http://is.gd/Um8nMh</description>
    </item>
    
    <item>
      <title>php去掉 HTML标记、javascript 代码、空白字符等</title>
      <link>https://idc.wf/docs/php-remove-html-tags-javascript-code-blank-characters-etc/</link>
      <pubDate>Sat, 12 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-remove-html-tags-javascript-code-blank-characters-etc/</guid>
      <description>代码：
preg_replace(&amp;quot;&#39;([\r\n])[\s]+&#39;&amp;quot;, &amp;quot;&amp;quot;, $content) //去除回车换行符 // $document 应包含一个 HTML 文档。 // 本例将去掉 HTML 标记，javascript 代码 // 和空白字符。还会将一些通用的 // HTML 实体转换成相应的文本。 $search = array (&amp;quot;&#39;&amp;lt;script&amp;gt;]*?&amp;gt;.*?&amp;lt;/script&amp;gt;&#39;si&amp;quot;, // 去掉 javascript &amp;quot;&#39;]*?&amp;gt;&#39;si&amp;quot;, // 去掉 HTML 标记 &amp;quot;&#39;([\r\n])[\s]+&#39;&amp;quot;, // 去掉空白字符 &amp;quot;&#39;&amp;amp;(quot|#34);&#39;i&amp;quot;, // 替换 HTML 实体 &amp;quot;&#39;&amp;amp;(amp|#38);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(lt|#60);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(gt|#62);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(nbsp|#160);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(iexcl|#161);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(cent|#162);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(pound|#163);&#39;i&amp;quot;, &amp;quot;&#39;&amp;amp;(copy|#169);&#39;i&amp;quot;, &amp;quot;&#39;(\d+);&#39;e&amp;quot;); // 作为 php 代码运行 $replace = array (&amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot; // $document 应包含一个 HTML 文档。 // 本例将去掉 HTML 标记，javascript 代码 // 和空白字符。还会将一些通用的 // HTML 实体转换成相应的文本。 $search = array (&amp;quot;&#39;&amp;lt;script&amp;gt;]*?</description>
    </item>
    
    <item>
      <title>php获取一个日期为当月的第几周</title>
      <link>https://idc.wf/docs/php-to-get-a-date-for-the-first-few-weeks-of-the-month/</link>
      <pubDate>Sat, 12 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-to-get-a-date-for-the-first-few-weeks-of-the-month/</guid>
      <description>function checkweek($day) { $month = date(&#39;m&#39;, time()); // 获取本月 $year = date(&#39;Y&#39;, time()); // 获取本年 $firstday = date(&#39;w&#39;, mktime(0, 0, 0, $month, 1, $year)); //本月1号星期数 $firstweek = 7 - $firstday; // 第1周天数 $week = ceil(($day - $firstweek) / 7) + 1; return $year.&#39;年&#39;.$month.&#39;月&#39;.$day . &#39;号属于本月第&#39; . $week . &#39;周&#39;; } $a = checkweek(14); //本月几号 echo $a;  </description>
    </item>
    
    <item>
      <title>litespeed_数据库备份工具</title>
      <link>https://idc.wf/docs/litespeed_-baidu-encyclopedia/</link>
      <pubDate>Fri, 11 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/litespeed_-baidu-encyclopedia/</guid>
      <description>litespeed是一个革命性的备份sql Server数据库的产品。拥有最新的加密和压缩算法可以快速、安全地备份所有的数据。
数据库失败和各种原因引起的宕机都是当前DBA面临的严酷现实。但是，通过litespeed，数据库的恢复时间和宕机时间都可以达到最小化。
litespeed可以实现所有sql Server自身的备份功能，包括数据库备份、差异备份、事务日志备份、文件备份、作业等，并且有自己独特的功能。
综合来讲，litespeed的主要作用体现在：
1） 减小存储需求
2） 减小备份时间
3） 减小恢复时间
4） 加密备份文件保证数据安全
5） 减小网络负载
6） 和sql Server完全集成
&amp;ndash;节省时间
最大能达到95%的压缩率
备份速度最大能加快70%
恢复速度最大能加快50%
减小宕机时间
&amp;mdash;&amp;mdash;节省费用
减小网络带宽需求
减小磁盘、磁带空间需求
减小宕机时间
通过litespeed_百度百科.</description>
    </item>
    
    <item>
      <title>密码查看工具，用来查看本机保存的密码</title>
      <link>https://idc.wf/docs/password-viewer-to-view-the-machine-saved-passwords/</link>
      <pubDate>Wed, 09 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/password-viewer-to-view-the-machine-saved-passwords/</guid>
      <description>这个网站提供一套的密码查看工具，从IM到BROWSER，从聊天工具到浏览器，从google到yahoo，很全很强大。。。
Download - www.SecurityXploded.com.</description>
    </item>
    
    <item>
      <title>淘宝啊，淘宝，项目啊，项目</title>
      <link>https://idc.wf/docs/ah-taobao-taobao-the-project-ah-the-project/</link>
      <pubDate>Sat, 29 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ah-taobao-taobao-the-project-ah-the-project/</guid>
      <description>公司跟淘宝合作的项目原定是2月底上线了，现在改到2月13号就要上线，唉，我们2月9号才开始上班啊，还要提前交付淘宝进行压力测试，淘宝的员工8号就来协助了。
唉。。。努力吧。。。</description>
    </item>
    
    <item>
      <title>2款 从 twitter 同步到 wordpress 的插件</title>
      <link>https://idc.wf/docs/2-sync-from-the-twitter-plugin-wordpress/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/2-sync-from-the-twitter-plugin-wordpress/</guid>
      <description>Twitter Tools 此插件能让你的 Twitter 和 WordPress 完全连在一起，你可选择当在 WordPress 发布新文章时，同时向 Twitter 发布一条关于你文章的消息。或者是当你在 Twitter 发布一条新的消息，同时在你的博客创建一篇新的文章，同时可指定文章的分类和标签。当然也能在博客侧边栏上显示你最新的 Twitter 消息。 下载 Twitter Tools
Thread Twitter 那就是将自己在 Twitter 上的所有会话输出到 WordPress 博客中，是回复的话会追溯父条目，而且会通过 Twitter Search 查找含有 @自己 的条目，即使它不是一个明确的回复。访问者在查看输出页面的时候，可以直接点击右侧的回复链接转到 Twitter 加入讨论。  下载 Thread Twitter  详见： http://fis.io/twitter</description>
    </item>
    
    <item>
      <title>XML CDATA</title>
      <link>https://idc.wf/docs/xml-cdata/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/xml-cdata/</guid>
      <description>&lt;p&gt;&lt;h2 align=&#34;left&#34;&gt;CDATA&lt;/h2&gt;
&lt;strong&gt;CDATA 内部的所有东西都会被解析器忽略。&lt;/strong&gt;假如文本中包含了大量的 &amp;ldquo;&amp;lt;&amp;rdquo; 和 &amp;ldquo;&amp;amp;&amp;rdquo; 字符 - 就像编程代码中经常出现的情况一样 - 那么这个 XML 元素就可以被定义为一个 CDATA 部分。CDATA 区段开始于 &lt;em&gt;&amp;ldquo;&amp;lt;![CDATA[&amp;rdquo;&lt;/em&gt;，结束于 &lt;em&gt;&amp;rdquo;]]&amp;gt;&amp;rdquo;&lt;/em&gt;：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>php删除文件unlink</title>
      <link>https://idc.wf/docs/php-shan-chu-wen-jian-unlink/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-shan-chu-wen-jian-unlink/</guid>
      <description>本文章来讲讲用php的unlink函数来删除文件和文件夹吧,下面来看看unlink的实例教程你知道如何建立一个档案。您知道如何打开一个文件中各种各样的方式不同。你甚至不知道如何读取和写入数据从一个文件！ 现在是时候了解如何摧毁（删除）文件。在php中删除的文件通过调用中断功能。 php的-文件unlink 当您查看的内容目录，您可以看到所有的档案，存在于该目录，因为作业系统或应用程序，您使用的是显示一个列表文件名。你可以把这些文件名作为链接，加入档案的目录您正在浏览。 如果您断开的文件，你是有效的制度造成忘记它或删除它！ 在您可以删除（断开）的文件，你首先必须确保它无法打开您的程序。使用fclose函数关闭一个开放的档案。 php的-文件unlink 请记住从php文件创建的教训，我们创建了一个文件，名为testFile.txt 。
$myFile = &amp;quot;testFile.txt&amp;quot;; $fh = fopen($myFile, &#39;w&#39;) or die(&amp;quot;can&#39;t open file&amp;quot;); fclose($fh);  判断是否删除了.
$myFile = &amp;quot;testFile.txt&amp;quot;; unlink($myFile);  删除文件.注明,删除文件夹在php里面只有文件夹为空时才能用unlink 进行删除操作.</description>
    </item>
    
    <item>
      <title>php检测用户是否使用代理上网的方法</title>
      <link>https://idc.wf/docs/php-jian-ce-yong-hu-shi-fou-shi-yong-dai-li-shang-wang-de-fang-fa/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/php-jian-ce-yong-hu-shi-fou-shi-yong-dai-li-shang-wang-de-fang-fa/</guid>
      <description>获取用户IP地址的三个属性的区别(HTTP_X_FORWARDED_FOR,HTTP_VIA,REMOTE_ADDR)
一、没有使用代理服务器的情况： 实例：
 REMOTE_ADDR = 158.41.30.94 HTTP_VIA = 没数值或不显示 HTTP_X_FORWARDED_FOR = 没数值或不显示  二、使用透明代理服务器的情况：Transparent Proxies 下例中，实际IP=158.41.30.94，使用代理服务器IP=210.51.46.227
 REMOTE_ADDR = 210.14.65.69 (最后一个代理服务器 IP) HTTP_VIA = 1.1 shopex:80 (squid/2.6.STABLE4), 1.0 briage.shopex.cn:81 (squid/2.5.STABLE14) HTTP_X_FORWARDED_FOR = 158.41.30.94, 210.51.46.227  这类代理服务器还是将您的信息转发给您的访问对象，无法达到隐藏真实身份的目的。
三、使用普通匿名代理服务器的情况：Anonymous Proxies 下例中，实际IP=158.41.30.94，使用代理服务器IP=210.51.46.227
 REMOTE_ADDR = 210.14.65.69 HTTP_VIA = 1.1 shopex:80 (squid/2.6.STABLE4), 1.0 briage.shopex.cn:81 (squid/2.5.STABLE14) HTTP_X_FORWARDED_FOR = 210.51.46.227  隐藏了您的真实IP，但是向访问对象透露了您是使用代理服务器访问他们的。
四、使用欺骗性代理服务器的情况：Distorting Proxies 下例中，实际IP=158.41.30.94，使用代理服务器IP=210.51.46.227
 REMOTE_ADDR = 210.14.65.69 HTTP_VIA = 1.1 shopex:80 (squid/2.6.STABLE4), 1.0 briage.</description>
    </item>
    
    <item>
      <title>找到2个wordpress 分享音乐相关的插件，不错哦～</title>
      <link>https://idc.wf/docs/found-2-wordpress-plugin-share-music-related-oh-well/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/found-2-wordpress-plugin-share-music-related-oh-well/</guid>
      <description>WordPress播放插件
作者：亦歌
使用WordPress搭建的博客，安装此插件后，可在侧边栏中滚动歌词、控制亦歌播放。
在管理平台的“插件”-&amp;gt;“添加新插件”中，搜索“1g1g music bar”，即可找到此插件，轻松安装。
您可以在亦歌博客中查看安装后的效果。
安装WordPress播放插件
WordPress分享插件(新!)
作者：908081293
使用WordPress搭建的博客，安装此插件后，可以在文章或页面中分享作者喜爱的歌曲。
该插件提供搜索功能，作者输入关键字，即可搜索出希望分享的歌曲。分享后页面中自动出现亦歌迷你播放器，播放分享的歌曲。
在管理平台的“插件”-&amp;gt;“添加新插件”中，搜索“1g music share”，即可找到此插件，轻松安装。
安装WordPress分享插件
通过亦歌 扩展软件.</description>
    </item>
    
    <item>
      <title>国外轻量级开源论坛系统vanilla Forums介绍</title>
      <link>https://idc.wf/docs/foreign-lightweight-open-source-forum-system-introduced-vanilla-forums/</link>
      <pubDate>Wed, 26 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/foreign-lightweight-open-source-forum-system-introduced-vanilla-forums/</guid>
      <description>&lt;p&gt;&lt;img title=&#34;vanilla Forums&#34; src=&#34;http://www.latooni.cn/uploads/2010/12/screen-6.gif&#34; alt=&#34;vanilla Forums&#34; width=&#34;500&#34; height=&#34;207&#34;&gt; &lt;strong&gt;简介&lt;/strong&gt;
： &lt;strong&gt;vanilla Forums&lt;/strong&gt;
是一套php+Mysql开源论坛。它的特点在于各种配置，功能，操作界面风格（
&lt;strong&gt;Themes&lt;/strong&gt;
）都很简洁，素雅。另外vanilla默认会在首页中直接列出所有贴子，按照时间顺序，把最新的讨论贴放在最前面和概念中的论坛相比更加像博客。vanilla所有的功能和模块都是通过应用（
&lt;strong&gt;Applications&lt;/strong&gt;
）和插件（
&lt;strong&gt;plugins&lt;/strong&gt;
）来实现，是一款灵活的轻量级论坛程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>smarty 模板中定义变量的方法</title>
      <link>https://idc.wf/docs/smarty-e6-a8-a1-e6-9d-bf-e4-b8-ad-e5-ae-9a-e4-b9-89-e5-8f-98-e9-87-8f-e7-9a-84-e6-96-b9-e6-b3-95/</link>
      <pubDate>Fri, 21 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/smarty-e6-a8-a1-e6-9d-bf-e4-b8-ad-e5-ae-9a-e4-b9-89-e5-8f-98-e9-87-8f-e7-9a-84-e6-96-b9-e6-b3-95/</guid>
      <description>{assign var=&amp;quot;i&amp;quot; value=0} {foreach name=simple_tab from=$zhinan_cate key=key item=item} {if $i} &amp;lt;small&amp;gt;|&amp;lt;/small&amp;gt; {/if} {if $item[&#39;count&#39;]} {math assign=&amp;quot;i&amp;quot; equation=&amp;quot;x + y&amp;quot; x=$i y=1} &amp;lt;span&amp;gt;&amp;lt;a title=&amp;quot;{$segment_parent}期{$item[&#39;title&#39;]}&amp;quot; href=&amp;quot;%7B%24base_url%7Dpinpaizhinan&amp;amp;t_id=%7B%24item%5B&#39;id&#39;%5D%7D&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;{$segment_parent}期{$item[&#39;title&#39;]}&amp;lt;/span&amp;gt; {else} {assign var=&amp;quot;i&amp;quot; value=0} {/if} {/foreach}  </description>
    </item>
    
    <item>
      <title>firefox中用js提交表单</title>
      <link>https://idc.wf/docs/firefox-zhong-yong-js-ti-jiao-biao-dan/</link>
      <pubDate>Thu, 20 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/firefox-zhong-yong-js-ti-jiao-biao-dan/</guid>
      <description>&lt;div class=&#34;postcontent&#34;&gt;
    &lt;span class=&#34;Apple-style-span&#34;&gt;
        1.document.forms.from.submit();</description>
    </item>
    
    <item>
      <title>sql DISTINCT去掉重复的数据统计方法</title>
      <link>https://idc.wf/docs/sql-distinct-qu-diao-zhong-fu-de-shu-ju-tong-ji-fang-fa/</link>
      <pubDate>Thu, 20 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/sql-distinct-qu-diao-zhong-fu-de-shu-ju-tong-ji-fang-fa/</guid>
      <description>sql DISTINCT去掉重复的数据统计方法(2009-01-13 15:05:43)转载 标签：sqldistinct杂谈 分类：sql SELECT指令让我们能够读取表格中一个或数个栏位的所有资料。这将把所有的资料都抓出，无论资料值有无重复。在资料处理中，我们会经常碰到需要找出表格内的不同资料值的情况。换句话说，我们需要知道这个表格/栏位内有哪些不同的值，而每个值出现的次数并不重要。这要如何达成呢？在sql中，这是很容易做到的。我们只要在SELECT后加上一个DISTINCT就可以了。 DISTINCT的语法如下： SELECT DISTINCT &amp;ldquo;栏位名&amp;rdquo; FROM &amp;ldquo;表格名&amp;rdquo; 举例来说，若要在以下的表格，Store_Information，找出所有不同的店名时，Store_Information 表格 store_name Sales Date 1 $1500 Jan-05-1999 2 $250 Jan-07-1999 1 $300 Jan-08-1999 3 $700 Jan-08-1999 我們就鍵入，
SELECT DISTINCT store_name FROM Store_Information  結果: 1 2 3 DISTINCT 关键字可从 SELECT 语句的结果中除去重复的行。如果没有指定 DISTINCT，那么将返回所有行，包括重复的行。
select count(distinct t.destaddr) from nbyd_send t where t.input_time &amp;gt; to_date(&#39;2007-2-1&#39;,&#39;yyyy-mm-dd&#39;) and t.input_time &amp;lt; to_date(&#39;2007-3-1&#39;,&#39;yyyy-mm-dd&#39;)  可以统计出一个月中的用户数量。 关于如何快速得知里面每一个号码重复的个数问题的解答: 利用分组函数的sql语句
select t.tel,count(*) from nbyd_deliver t group by t.</description>
    </item>
    
    <item>
      <title>80后男孩子如果买不起房子，80后女孩子可以嫁给40岁的男人</title>
      <link>https://idc.wf/docs/80-if-you-can-not-afford-a-house-after-the-boys-80-girls-you-can-marry-40-year-old-man/</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/80-if-you-can-not-afford-a-house-after-the-boys-80-girls-you-can-marry-40-year-old-man/</guid>
      <description>1楼原帖： 某俩会委员发言：“上海是全世界的上海，上海的房价应该和国际接轨，不应该以80后的承受能力为标准。 我觉得80后男孩子如果买不起房子，80后女孩子可以嫁给40岁的男人。80后的男人如果有条件了，到40岁再娶20岁的女孩子也是不错的选择。” 2楼回复： 我终于到40岁了，找到一个年轻貌美的20岁女友 去她家见家长 开门的是当年读大学时相处了几年的初恋女友 新女友喊了一声：妈~ 3楼补充： 她妈看到我，惊得倒吸一口冷气。 没等我反应过来，然后把女儿拉进房间里，对女儿说“你不能和他在一起，他是你亲生父亲啊！” 4楼继续补充： 女儿：我已经有了他的骨肉 5楼 补充后面情节： 这时候从外面回来一个白发苍苍的老头，指着40多岁的男人说，激动的说：孩子他妈，这就是我失散多年的儿子！</description>
    </item>
    
    <item>
      <title>smarty 花括号转义</title>
      <link>https://idc.wf/docs/smarty-escape-braces/</link>
      <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/smarty-escape-braces/</guid>
      <description>使用 smarty 模板的时候，通常都是用 ‘{’ 和 ‘}’ 作为定界符（delimiter）。
有时，我们需要在 html 代码里输出大括号，如果在模板里直接写出来，会被 smarty 的解析器认为是定界符，然后会报错：
smarty error : syntax error: unrecognized tag 无法识别的标签！
如何解决呢？有 2 种办法：
1：内置变量
ldelim, rdelim ldelim and rdelim are used for displaying the literal delimiter, in our case “{” or “}”. The template engine always tries to interpret delimiters, so this is the way around that. ldelim 和 rdelim 用于输出分隔符，也就是大括号 ‘{’ 和 ‘}’。如果只是输出很少的几个大括号，请使用此方法。
2： 文本转义
我们经常会在 html 里写 javascript 函数，就不可避免地写大量的大括号，这个时候上面的解决方法就不适用了，smarty 提供了一个转义一段代码的标签：</description>
    </item>
    
    <item>
      <title>不知道是那个微薄上面的给人感触很深的一句话</title>
      <link>https://idc.wf/docs/i-do-not-know-that-the-above-gives-strong-feelings-meager-sentence/</link>
      <pubDate>Tue, 18 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/i-do-not-know-that-the-above-gives-strong-feelings-meager-sentence/</guid>
      <description>星座小王子 (@xingzuoxwz) V：那一年，苍井空还是处女，冠希还没有相机，李刚还没有儿子，菊花只是一种花，企鹅不是qq，2B我只知道是铅笔，买方便面还有调料，杯具只是用来刷牙，楼房是用来住的，黄瓜香蕉只是用来吃的，教授还不是叫兽，太阳还不叫日，领导不会写日记，鸭梨还没有这么大，肚子大了知道是谁的，我们还相信真情。</description>
    </item>
    
    <item>
      <title>程序员三大法则</title>
      <link>https://idc.wf/docs/three-rules-programmers/</link>
      <pubDate>Sat, 15 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/three-rules-programmers/</guid>
      <description>第一法则
程序员不得损害产品质量，或袖手旁观产品质量受到损害。
第二法则
程序员必须服从产品经理的命令，除非违背第一法则。
第三法则
程序员必须保护自己，除非违背第一和第二法则。
据说还有一条繁殖定律：
繁殖定律
程序员不得参与程序员的孕育和培养，除非新程序员的行动符合以上三大法则。
参考资料：Three Laws of Robotics 转载自：http://lifesinger.org/blog/2011/01/three-laws-of-programmers/</description>
    </item>
    
    <item>
      <title>javascript 检查字符串是否是数字的几种方法</title>
      <link>https://idc.wf/docs/javascript-jian-cha-zi-fu-chuan-shi-fou-shi-shu-zi-de-ji-zhong-fang-fa/</link>
      <pubDate>Mon, 10 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/javascript-jian-cha-zi-fu-chuan-shi-fou-shi-shu-zi-de-ji-zhong-fang-fa/</guid>
      <description>代码：
//判断是否是正整数 function IsNum(s) { if(s!=null){ var r,re; re = /\d*/i; //\d表示数字,*表示匹配多个数字 r = s.match(re); return (r==s)?true:false; } return false; } //判断是否为数字 function IsNum(s) { if (s!=null &amp;amp;&amp;amp; s!=&amp;quot;&amp;quot;) { return !isNaN(s); } return false; }  </description>
    </item>
    
    <item>
      <title>bluehost下主域名和附加域目录路径的自定义</title>
      <link>https://idc.wf/docs/bluehost-xia-zhu-yu-ming-he-fu-jia-yu-mu-lu-lu-jing-de-zi-ding-yi/</link>
      <pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/bluehost-xia-zhu-yu-ming-he-fu-jia-yu-mu-lu-lu-jing-de-zi-ding-yi/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;line-height: 18px;&#34;&gt;bluehost在默认情况下，主域名和附加域目录路径如下：&lt;br style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/ (主域名对应目录)&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/subfolderB (附加域名B)&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/subfolderC (附加域名C)&lt;br style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34;&gt;从上面的路径结构可以看出：主域名所对应的目录/public_html中包含有“附加域名B”和“附加域名C”这两个文件夹，如果你希望让上述三者成为并列关系，可以使用.htaccess命令来灵活定制。&lt;br style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34;&gt;例如实现这种目录结构：&lt;br style=&#34;line-height: normal;&#34;&gt;&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/subfolderA (主域名对应目录)&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/subfolderB (附加域名B对应目录)&lt;br style=&#34;line-height: normal;&#34;&gt;/home/youraccount/public_html/subfolderC (附加域名C对应目录)&lt;br style=&#34;line-height: normal;&#34;&gt;用文本编辑器编辑.htaccess文件，内容修改和参照下面的代码：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mantis汉化方法</title>
      <link>https://idc.wf/docs/mantis-han-hua-fang-fa/</link>
      <pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/mantis-han-hua-fang-fa/</guid>
      <description>在mantisbt目录里找到config_defaults_inc.php这个文件,在这个文件里找到$g_default_language = &amp;lsquo;english&amp;rsquo;; ，修改为$g_default_language = &amp;lsquo;chinese_simplified&amp;rsquo;;</description>
    </item>
    
    <item>
      <title>ubuntu 环境下 安装 java6-sdk</title>
      <link>https://idc.wf/docs/ubuntu-huan-jing-xia-an-zhuang-java6-sdk/</link>
      <pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/ubuntu-huan-jing-xia-an-zhuang-java6-sdk/</guid>
      <description>安装sun-java6 添加partner源
sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  (注： 如果系统提示没有add-apt-repository命令，则需要先安装python-software-properties，命令sudo apt-get install python-software-properties。另外，有些版本的ubuntu即使安装了python-software-properties 也无add-apt-repository命令,此时需要手动添加此行&amp;rdquo;deb http://archive.canonical.com/ubuntu maverick partner&amp;rdquo;到/etc/apt/sources.list文件中。)
更新系统
sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  安装jre
sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  安装jdk
sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  查看版本信息
sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  设为默认Java sudo add-apt-repository &amp;quot;deb http://archive.canonical.com/ubuntu maverick partner&amp;quot;  选择即可  </description>
    </item>
    
    <item>
      <title>终极Shell——Zsh</title>
      <link>https://idc.wf/docs/zhong-ji-shellzsh/</link>
      <pubDate>Sat, 08 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/zhong-ji-shellzsh/</guid>
      <description>[撰文/Kardinal] http://linuxtoy.org/archives/zsh.html 子曾经曰过，zsh: The last shell you’ll ever need! Z是最后一个字母，所以它是终极Shell。我曾经搜索到一个比较各种Shell的文章，Zsh交互性是A+级别的，远高于其它Shell。在编程方面，Zsh是A级的吧，也是最高的。只是不知道出于什么原因，Zsh被严重的低估了。 大多数的linux用户比较偏爱Bash，因为大多数的发行版默认的就是它。平心而论，Bash确实比Csh之流的好用多了。不过Bash也有很多地方不尽人意，像自动补全的功能不够强大，定位较长路径不够方便等。 后来我使用Zsh。如果不调整一些必要的配置的话，Zsh甚至还不如Bash好用。这也是很多人尝试过并放弃过的原因。 Zsh配置文件试用 (内附讲解) 不熟悉Zsh的人，对Zsh最深刻的印象应该就是它的命令提示符了。它支持右侧对齐的提示符，并且可以配置成这个样子的： 不过我还是喜欢比较简单的样式。 Zsh的 自动补全功能 十分的强大，如图所示： 它可以自动补全命令、参数、文件名、进程、用户名、变量、权限符等。 Zsh还有一个贴心的功能： 路径别名 。假设有一个很长的路径，例如/home/lighttpd/html，可以把这个路径命名为 ~WWW。 Zsh可以使用 Emacs风格的键绑定 ，习惯Bash键绑定的朋友无需重新适应。Zsh兼容大多数主流Shell，像Bash、Csh等。 错误校正 &amp;ndash; directory &amp;ndash; 是补全类型提示
/etc/x11 [tab] 后被修正为 /etc/X11 补全类型提示变成了 &amp;ndash; corrections &amp;ndash;
请注意，这个功能不是单纯的修正大小写，而是各种拼写错误 比如说上面的例子，如果输入的是11或者s11，它一样会修正为X11 有一个前提，就是每次修正，只允许有一处字符错误 两个以上的错误，除非可以匹配其它的选项，否则就不能修正 12 就不能修正为X11 ，除非候选里有 X12、Y12、Z12……
在配置文件里找到这一行，修改容错字数 zstyle &amp;lsquo;:completion: :approximate: &amp;lsquo; max-errors 1 numeric 当然可以把容错字数改大一些，不过太大了也没有意义了 随便输点什么，就可以匹配所有的，和没有一样
强大的重定向功能 同时重定向stdout和stderr到file: command |&amp;amp; &amp;gt;file 同时重定向到多个文件: command &amp;gt;file.1 &amp;gt;file.2 比如装系统的时候，可以用这个命令
blkid &amp;gt;&amp;gt; /boot/grub/menu.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/http-x-forwarded-proto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/http-x-forwarded-proto/</guid>
      <description>layout: post title: HTTP_X_FORWARDED_PROTO date: 2015-12-31 02:08:26 categories: - web tags: - linux - yii
- php yii2 框架中根据 2 个值判断是不是 https ，如下：
isset($\_SERVER[&#39;HTTPS&#39;]) &amp;amp;&amp;amp; (strcasecmp($\_SERVER[&#39;HTTPS&#39;], &#39;on&#39;) === 0 || $\_SERVER[&#39;HTTPS&#39;] == 1) || isset($\_SERVER[&#39;HTTP_X_FORWARDED_PROTO&#39;]) &amp;amp;&amp;amp; strcasecmp($\_SERVER[&#39;HTTP_X_FORWARDED_PROTO&#39;], &#39;https&#39;) === 0;  其中 HTTPS 这个值比较好理解，直接查询服务器有没有配置过 HTTPS 就可以知道了。 但是， HTTP_X_FORWARDED_PROTO 这个值我就没看懂是什么意思，而且在网上查了蛮多资料，一般来说，是有设置过下面的值
proxy_set_header X-Forwarded-Proto $scheme;  之后，才可以在 php 的 $_SERVER 中看到这个值，但是我们目前的服务器配置中并没有设置过这些内容，那么这个值是怎么来的呢？ 先记下来，后面有头绪了再说。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/centos-delete-php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/centos-delete-php/</guid>
      <description>layout: 删除已经安装的PHP title: centos-delete-php date: 2016-01-26 22:50:37 categories: - linux tags: - linux - php
- delete 可以编译删除的 make uninstall make clean rm -rf php //php目录  单独的可执行文件 whereis xxx 找到软件安装目录，rm -rf 把这些目录都删除
重新编译安装发 找一个临时目录重新安装一遍。比如./configure &amp;ndash;prefix=/tmp/to_remove &amp;amp;&amp;amp; make install 然后遍历/tmp/to_remove里的文件，把你原来安装位置的文件都删除。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/centos-php-mcrypt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/centos-php-mcrypt/</guid>
      <description>layout: post title: CentOS下php安装mcrypt扩展 date: 2016-01-26 22:41:04 categories: - linux tags: - linux - php
- mcrypt 确认你的linux没有安装mcrypt库，如果已安装，跳过安装步骤 [root@test-206 ~]# yum list installed|grep mcrypt libmcrypt.x86_64 2.5.8-4.el5.centos installed libmcrypt-devel.x86_64 2.5.8-4.el5.centos installed mcrypt.x86_64 2.6.8-1.el5 installed  以上显示已经安装过，若没有，则按以下两种方式安装
yum命令懒人安装 yum install libmcrypt libmcrypt-devel mcrypt mhash  执行后会显示即将安装的相关库，你可以根据你的linux限定x86_64或者i386，如yum install libmcrypt.x86_64（如果yum命令无法连接仓库，请检查你的/etc/yum.repos.d/里的文件正确性，以及你的/etc/host是不是可达里面的域名）
Dependencies Resolved ================================================================================ Package Arch Version Repository Size ================================================================================ Installing: libmcrypt i386 2.5.7-5.el5 epel 124 k libmcrypt x86_64 2.5.8-4.el5.centos extras 105 k libmcrypt-devel i386 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/composer-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/composer-tools/</guid>
      <description>layout: post title: Composer 常用 PHP 小工具 date: 2017-03-09 16:07:07 categories: - web tags:
- php Composer 常用 PHP 小工具 composer 安装方法: https://getcomposer.org/doc/00-intro.md#installation-windows
常用小工具:
composer global require composer/composer composer global require phpmd/phpmd composer global require phpunit/dbunit composer global require phpunit/phpunit composer global require sebastian/phpcpd composer global require justinrainbow/json-schema composer global require phpdocumentor/phpdocumentor composer global require sami/sami composer global require squizlabs/php_codesniffer composer global require fabpot/php-cs-fixer composer global require friendsofphp/php-cs-fixer  相关文档: http://www.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/mysqldump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/mysqldump/</guid>
      <description>layout: post title: mysql 导入导出数据 date: 2015-12-31 02:04:30 categories: - web tags: - mysql
- linux ##　导出数据库用mysqldump命令（注意mysql的安装路径，即此命令的路径）：
导出数据和表结构： mysqldump -u用户名 -p密码 数据库名 &amp;gt; 数据库名.sql #/usr/local/mysql/bin/ mysqldump -uroot -p abc &amp;gt; abc.sql 敲回车后会提示输入密码  只导出表结构 mysqldump -u用户名 -p密码 -d 数据库名 &amp;gt; 数据库名.sql #/usr/local/mysql/bin/ mysqldump -uroot -p -d abc &amp;gt; abc.sql  注：/usr/local/mysql/bin/ &amp;mdash;&amp;gt; mysql的data目录
导入数据库 首先建空数据库 mysql&amp;gt;create database abc;  导入数据库 方法一：  选择数据库 mysql&amp;gt;use abc; 设置数据库编码 mysql&amp;gt;set names utf8; 导入数据（注意sql文件的路径） mysql&amp;gt;source /home/abc/abc.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/root-google-now/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/root-google-now/</guid>
      <description>layout: post title: &amp;ldquo;[root]一条命令开启 Google Now &amp;amp; 位置报告&amp;rdquo; date: 2016-01-23 14:18:57 categories: - linux tags: - linux - android
- google now 使用 root 权限运行以下命令(重启后失效)
setprop gsm.sim.operator.alpha &amp;quot;AT&amp;amp;T&amp;quot; &amp;amp;&amp;amp; setprop gsm.sim.operator.iso-country &amp;quot;us&amp;quot; &amp;amp;&amp;amp; setprop gsm.sim.operator.numeric &amp;quot;310090&amp;quot;  一段时间（几小时）后 Google Now 就能打开了</description>
    </item>
    
    <item>
      <title></title>
      <link>https://idc.wf/docs/vbox-ubuntu-nginx-redmine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/docs/vbox-ubuntu-nginx-redmine/</guid>
      <description>layout: post title: virtualbox ubuntu 下面安装 redmine date: 2016-03-12 15:40:12 categories: - linux tags: - virtualbox - ubuntu
- redmine 安装 ubuntu 配置网络 然后在 vb 中配置安装 ubuntu ，这里需要注意的是，把网络类型改为 桥接。
配置静态IP sudo vi /etc/network/interfaces  原有内容只有如下两行：
auto lo iface lo inet loopback  如果是动态获取IP地址，那么就不需要添加如下内容 如果设置静态IP,向末尾追加以下内容：
auto eth0 iface eth0 inet static address 静态IP地址 gateway 192.168.0.1 netmask 255.255.255.0  然后保存退出；
更新源 更新源： /etc/apt/sources.list 阿里更新源（14.04）
deb http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe deb http://mirrors.</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://idc.wf/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://idc.wf/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>